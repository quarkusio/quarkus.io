---  # document start

categories:
  - category: Core
    cat-id: core
    guides:
      - title: Configuring Your Application
        url: /guides/application-configuration-guide
        description: Hardcoded values in your code is a no go (even if we all did it at some point ;-)). In this guide, we learn how to configure your application.
      - title: Application Initialization and Termination
        url: /guides/application-lifecycle-events-guide
        description: You often need to execute custom actions when the application starts and clean up everything when the application stops. This guide explains how to be notified when an application stops or starts.
      - title: Contexts and Dependency Injection
        url: /guides/cdi-reference
        description: Quarkus DI solution is based on the [Contexts and Dependency Injection for Java 2.0](https://docs.jboss.org/cdi/spec/2.0/cdi-spec) specification. However, it is not a full CDI implementation verified by the TCK. Only a subset of the CDI features is implemented - see also the list of supported features and the list of limitations.
      - title: Testing Your Application
        url: /guides/getting-started-testing
        description: |
          This guide covers:
          
          * Testing in JVM mode
          * Testing in native mode
          * Injection of resources into tests
      - title: Configuring Logging
        url: /guides/logging-guide
        description: This guide explains logging and how to configure it.
      - title: Using SSL With Native Images
        url: /guides/native-and-ssl-guide
        description: In this guide, we will discuss how you can get your native images to support SSL, as native images don't support it out of the box.
      - title: Context Propagation
        url: /guides/context-propagation-guide
        description: Learn more about how you can pass contextual information with our implementation of MicroProfile Context Propagation.
  - category: Web
    cat-id: web
    guides:
      - title: Writing REST JSON Services
        url: /guides/rest-json-guide
        description: JSON is now the lingua franca between microservices. In this guide, we see how you can get your REST services to consume and produce JSON payloads.
      - title: Validation with Hibernate Validator
        url: /guides/validation-guide
        description: This guide covers how to use Hibernate Validator/Bean Validation in your REST services.
      - title: Using the REST Client
        url: /guides/rest-client-guide
        description: This guide explains how to use the MicroProfile REST Client in order to interact with REST APIs with very little effort.
      - title: Using JWT RBAC
        url: /guides/jwt-guide
        description: This guide explains how your application can utilize MicroProfile JWT RBAC to provide secured access to the JAX-RS endpoints.
      - title: Using WebSockets
        url: /guides/websocket-guide
        description: This guide explains how your Quarkus application can utilize web sockets to create interactive web applications. Because itâ€™s the canonical web socket application, we are going to create a simple chat application.
      - title: Using OpenAPI and Swagger UI
        url: /guides/openapi-swaggerui-guide
        description: This guide explains how to use the OpenAPI extension to generate an OpenAPI descriptor and get a Swagger UI frontend to test your REST endpoints.
      - title: Undertow Reference Documentation
        url: /guides/undertow-reference
        description: Undertow is the webserver used by Quarkus. Learn more about configuring it.
      - title: Using Fault Tolerance
        url: /guides/fault-tolerance-guide
        description: This guide demonstrates how your Quarkus application can utilize the MicroProfile Fault Tolerance specification through the SmallRye Fault Tolerance extension.
  - category: Data
    cat-id: data
    guides:
      - title: Configuring your datasources
        url: /guides/datasource-guide
        description: With Quarkus, you can easily configure a datasource, or several if need be.
      - title: Using Hibernate ORM and JPA
        url: /guides/hibernate-orm-guide
        description: Hibernate ORM is the de facto JPA implementation and offers you the full breath of an Object Relational Mapper. It works beautifully in Quarkus.
      - title: Simplified Hibernate ORM with Panache
        url: /guides/hibernate-orm-panache-guide
        description: |
          Hibernate ORM is the de facto JPA implementation and offers you the full breadth of an Object Relational Mapper.
          
          It makes complex mappings possible, but it does not make simple and common mappings trivial.
          
          Panache focuses on making your entities trivial and fun to write.
      - title: Hibernate Search + Elasticsearch
        url: /guides/hibernate-search-guide
        description: Hibernate Search allows you to index your entities in an Elasticsearch cluster and easily offer full text search in all your Hibernate ORM-based applications.
      - title: Using Infinispan Client
        url: /guides/infinispan-client-guide
        description: Infinispan is an in memory data grid that allows running in a server outside of application processes. This extension provides functionality to allow the client that can connect to said server when running in Quarkus.
      - title: Using Transactions
        url: /guides/transaction-guide
        description: |
          Quarkus comes with a Transaction Manager and uses it to coordinate and expose transactions to your applications.
          Each extension dealing with persistence will integrate with it for you.
          And you will explicitly interact with transactions via CDI.
          This guide will walk you through all that.
      - title: Validation with Hibernate Validator
        url: /guides/validation-guide
        description: This guide covers how to use Hibernate Validator/Bean Validation in your REST services.
      - title: Schema Migration with Flyway
        url: /guides/flyway-guide
        description: This guide covers how to use the Flyway extension to manage your schema migrations.
      - title: Reactive Postgres Client
        url: /guides/reactive-postgres-client
        description: This guide covers how to use the Reactive Postgres Client in Quarkus.
      - title: MongoDB Client
        url: /guides/mongo-guide
        description: This guide covers how to use MongoDB in Quarkus.
      - title: Neo4j Client
        url: /guides/neo4j-guide
        description: This guide covers how to use the Neo4j graph database in Quarkus.
  - category: Messaging
    cat-id: messaging
    guides:
      - title: Using Apache Kafka
        url: /guides/kafka-guide
        description: This guide demonstrates how your Quarkus application can utilize MicroProfile Reactive Messaging to interact with Apache Kafka.
      - title: Using AMQP with Reactive Messaging
        url: /guides/amqp-guide
        description: This guide demonstrates how your Quarkus application can utilize MicroProfile Reactive Messaging to interact with AMQP.
      - title: Using Apache Kafka Streams
        url: /guides/kafka-streams-guide
        description: This guide demonstrates how your Quarkus application can utilize the Apache Kafka Streams API to implement stream processing applications based on Apache Kafka.
      - title: Asynchronous Message Passing
        url: /guides/async-message-passing
        description: This guide explains how different beans can interact using asynchronous messages.  
        
  - category: Security
    cat-id: security
    guides:
      - title: Using Security
        url: /guides/security-guide
        description: This quide demonstrates integration with the Elytron security subsystem to allow for RBAC based on the common security annotations `@RolesAllowed`, `@DenyAll`, `@PermitAll` on REST endpoints.
      - title: Using JWT RBAC
        url: /guides/jwt-guide
        description: This guide explains how your application can utilize MicroProfile JWT RBAC to provide secured access to the JAX-RS endpoints.
      - title: Using Keycloak to Protect JAX-RS Applications
        url: /guides/keycloak-guide
        description: This guide demonstrates how your Quarkus application can use Keycloak to protect your JAX-RS applications using bearer token authorization, where these tokens are issued by a Keycloak server.
      - title: Using OAuth2 RBAC
        url: /guides/oauth2-guide
        description: This guide explains how your Quarkus application can utilize OAuth2 tokens to provide secured access to the JAX-RS endpoints.
  - category: Business Automation
    cat-id: business-automation
    guides:
      - title: Using Kogito to add business automation capabilities to an application
        url: /guides/kogito-guide
        description: This guide demonstrates how your Quarkus application can use Kogito to add business automation to power it up with business processes and rules.
  - category: Cloud
    cat-id: cloud
    guides:
      - title: Deploying Native Applications on Kubernetes or OpenShift
        url: /guides/kubernetes-guide
        description: This guide covers how to deploy a native application on Kubernetes or OpenShift.
      - title: Deploying Native Applications on Knative Kubernetes or OpenShift
        url: /guides/getting-started-knative-guide
        description: This guide demonstrates how to deploy an application on Knative Kubernetes or OpenShift.
      - title: Generating Kubernetes Resources
        url: /guides/kubernetes-resources
        description: This guide demonstrates how generate Kubernetes resources using Quarkus Kubernetes extension.
      - title: Using the Kubernetes Client to Interact with a Kubernetes Cluster
        url: /guides/kubernetes-client
        description: This guide demonstrates how to use the Fabric8 Kubernetes client to interact with your Kubernetes cluster.
      - title: Deploying to OpenShift using S2I
        url: /guides/openshift-s2i-guide
        description: This guide explains how to deploy a Quarkus application to OpenShift using S2I.
      - title: Deploying to Microsoft Azure Cloud
        url: /guides/azure-cloud-guide
        description: This guide explains how to deploy a Quarkus application to Microsoft Azure Cloud.
  - category: Observability
    cat-id: observability
    guides:
      - title: Using Health Check
        url: /guides/health-guide
        description: This guide demonstrates how your Quarkus application can utilize the MicroProfile Health specification through the SmallRye Health extension.
      - title: Using OpenTracing
        url: /guides/opentracing-guide
        description: This guide explains how your Quarkus application can utilize OpenTracing to provide distributed tracing for interactive web applications.
      - title: Collecting Metrics
        url: /guides/metrics-guide
        description: This guide demonstrates how your Quarkus application can utilize the MicroProfile Metrics specification through the SmallRye Metrics extension.
      - title: Using Fault Tolerance
        url: /guides/fault-tolerance-guide
        description: This guide demonstrates how your Quarkus application can utilize the MicroProfile Fault Tolerance specification through the SmallRye Fault Tolerance extension.
  - category: Serialization
    cat-id: serialization
    guides:
      - title: Writing REST JSON Services
        url: /guides/rest-json-guide
        description: JSON is now the lingua franca between microservices. In this guide, we see how you can get your REST services to consume and produce JSON payloads.
  - category: Tooling
    cat-id: tooling
    guides:
      - title: Building Applications with Maven
        url: /guides/maven-tooling
        description: |
          This guide covers:
          
          * Maven configuration
          * Creating a new project
          * Dealing with extensions
          * Development mode
          * Debugging
          * Import in your IDE
          * Building a native image
          * Build a container friendly executable
      - title: Building Applications with Gradle
        url: /guides/gradle-tooling
        description: |
          This guide covers:
          
          * Gradle configuration
          * Creating a new project
          * Dealing with extensions
          * Development mode
          * Debugging
          * Import in your IDE
          * Building a native image
          * Build a container friendly executable
      - title: Measuring the coverage of your tests
        url: /guides/tests-with-coverage-guide
        description: This guide explains how to measure the test coverage of your Quarkus application.
  - category: Migration
    cat-id: migration
    guides:
      - title: Using our Spring DI compatibility layer
        url: /guides/spring-di-guide
        description: While you are encouraged to use CDI annotations for injection, Quarkus provides a compatibility layer for Spring dependency injection in the form of the spring-di extension.
  - category: Writing Extensions
    cat-id: writing-extensions
    guides:
      - title: Writing Your Own Extension
        url: /guides/extension-authors-guide
        description: |
          Quarkus extensions add a new developer focused behavior to the core offering, and consist of two distinct parts, buildtime augmentation and runtime container. The augmentation part is responsible for all metadata processing, such as reading annotations, XML descriptors etc. The output of this augmentation phase is recorded bytecode which is responsible for directly instantiating the relevant runtime services.
          
          This means that metadata is only processed once at build time, which both saves on startup time, and also on memory usage as the classes etc that are used for processing are not loaded (or even present) in the runtime JVM.
      - title: Writing Native Applications
        url: /guides/writing-native-applications-tips
        description: This guide is a collection of tips to help you solve the problems you encounter when compiling applications to native executable.
  - category: Alternative Languages
    cat-id: alternative-languages
    guides:
      - title: Using Kotlin
        url: /guides/kotlin
        description: This guide explains how to use Kotlin.
  - category: Miscellaneous
    cat-id: miscellaneous
    guides:
      - title: Scheduling Periodic Tasks
        url: /guides/scheduled-guide
        description: Modern applications often need to run specific tasks periodically. In this guide, you learn how to schedule periodic tasks.
      - title: Sending Emails
        url: /guides/sending-emails
        description: Learn more about how you can send email from a Quarkus application with our reactive email client.
      - title: Using Vert.x
        url: /guides/using-vertx
        description: This guide explains how to use Vert.x in Quarkus to build reactive applications.
      - title: Measuring Performance
        url: /guides/performance-measure
        description: When measuring the footprint of a Quarkus application, we measure Resident Set Size (RSS) and not the JVM heap size which is only a small part of the overall problem. The JVM not only allocates native memory for heap (`-Xms`, `-Xmx`) but also structures required by the jvm to run your application.

