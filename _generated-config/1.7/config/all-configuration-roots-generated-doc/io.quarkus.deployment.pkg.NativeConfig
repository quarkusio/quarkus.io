[{"configDocKey":{"type":"string","key":"quarkus.native.additional-build-args","configDoc":"Additional arguments to pass to the build process","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"additional-build-args","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"boolean","key":"quarkus.native.enable-http-url-handler","configDoc":"If the HTTP url handler should be enabled, allowing you to do URL.openConnection() for HTTP URLs","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"enable-http-url-handler","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"boolean","key":"quarkus.native.enable-https-url-handler","configDoc":"If the HTTPS url handler should be enabled, allowing you to do URL.openConnection() for HTTPS URLs","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"enable-https-url-handler","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"boolean","key":"quarkus.native.enable-all-security-services","configDoc":"If all security services should be added to the native image","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"enable-all-security-services","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"boolean","key":"quarkus.native.add-all-charsets","configDoc":"If all character sets should be added to the native image. This increases image size","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"add-all-charsets","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"string","key":"quarkus.native.graalvm-home","configDoc":"The location of the Graal distribution","withinAMap":false,"defaultValue":"${GRAALVM_HOME:}","javaDocSiteLink":"","docMapKey":"graalvm-home","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"java.io.File","key":"quarkus.native.java-home","configDoc":"The location of the JDK","withinAMap":false,"defaultValue":"${java.home}","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/io/File.html","docMapKey":"java-home","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"string","key":"quarkus.native.native-image-xmx","configDoc":"The maximum Java heap to be used during the native image generation","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"native-image-xmx","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"boolean","key":"quarkus.native.debug-build-process","configDoc":"If the native image build should wait for a debugger to be attached before running. This is an advanced option and is generally only intended for those familiar with GraalVM internals","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"debug-build-process","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"boolean","key":"quarkus.native.publish-debug-build-process-port","configDoc":"If the debug port should be published when building with docker and debug-build-process is true","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"publish-debug-build-process-port","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"boolean","key":"quarkus.native.cleanup-server","configDoc":"If the native image server should be restarted","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"cleanup-server","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"boolean","key":"quarkus.native.enable-isolates","configDoc":"If isolates should be enabled","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"enable-isolates","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"boolean","key":"quarkus.native.enable-fallback-images","configDoc":"If a JVM based 'fallback image' should be created if native image fails. This is not recommended, as this is functionally the same as just running the application in a JVM","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"enable-fallback-images","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"boolean","key":"quarkus.native.enable-server","configDoc":"If the native image server should be used. This can speed up compilation but can result in changes not always being picked up due to cache invalidation not working 100%","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"enable-server","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"boolean","key":"quarkus.native.auto-service-loader-registration","configDoc":"If all META-INF/services entries should be automatically registered","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"auto-service-loader-registration","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"boolean","key":"quarkus.native.dump-proxies","configDoc":"If the bytecode of all proxies should be dumped for inspection","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"dump-proxies","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"boolean","key":"quarkus.native.container-build","configDoc":"If this build should be done using a container runtime. If this is set docker will be used by default, unless container-runtime is also set.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"container-build","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"string","key":"quarkus.native.builder-image","configDoc":"The docker image to use to do the image build","withinAMap":false,"defaultValue":"quay.io/quarkus/ubi-quarkus-native-image:20.1.0-java11","javaDocSiteLink":"","docMapKey":"builder-image","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"string","key":"quarkus.native.container-runtime","configDoc":"The container runtime (e.g. docker) that is used to do an image based build. If this is set then a container build is always done.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"container-runtime","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"string","key":"quarkus.native.container-runtime-options","configDoc":"Options to pass to the container runtime","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"container-runtime-options","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"boolean","key":"quarkus.native.enable-vm-inspection","configDoc":"If the resulting image should allow VM introspection","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"enable-vm-inspection","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"boolean","key":"quarkus.native.full-stack-traces","configDoc":"If full stack traces are enabled in the resulting image","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"full-stack-traces","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"boolean","key":"quarkus.native.enable-reports","configDoc":"If the reports on call paths and included packages/classes/methods should be generated","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"enable-reports","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"boolean","key":"quarkus.native.report-exception-stack-traces","configDoc":"If exceptions should be reported with a full stack trace","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"report-exception-stack-traces","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"boolean","key":"quarkus.native.report-errors-at-runtime","configDoc":"If errors should be reported at runtime. This is a more relaxed setting, however it is not recommended as it means your application may fail at runtime if an unsupported feature is used by accident.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"report-errors-at-runtime","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"string","key":"quarkus.native.resources.includes","configDoc":"A comma separated list of globs to match resource paths that should be added to the native image. \n Use slash (`/`) as a path separator on all platforms. Globs must not start with slash. \n By default, no resources are included. \n Example: Given that you have `src/main/resources/ignored.png` and `src/main/resources/foo/selected.png` in your source tree and one of your dependency JARs contains `bar/some.txt` file, with the following configuration quarkus.native.resources.includes = foo/++**++,bar/++**++/++*++.txt  the files `src/main/resources/foo/selected.png` and `bar/some.txt` will be included in the native image, while `src/main/resources/ignored.png` will not be included. \n Supported glob features   Feature Description   `++*++` Matches a (possibly empty) sequence of characters that does not contain slash (`/`)   `++**++` Matches a (possibly empty) sequence of characters that may contain slash (`/`)   `?` Matches one character, but not slash   `++[++abc++]++` Matches one character given in the bracket, but not slash   `++[++a-z++]++` Matches one character from the range given in the bracket, but not slash   `++[++!abc++]++` Matches one character not named in the bracket; does not match slash   `++[++a-z++]++` Matches one character outside the range given in the bracket; does not match slash   `++{++one,two,three++}++` Matches any of the alternating tokens separated by comma; the tokens may contain wildcards, nested alternations and ranges   `++\\++` The escape character   \n Note that there are three levels of escaping when passing this option via `application.properties`:  \n . `application.properties` parser \n - MicroProfile Config list converter that splits the comma separated list \n - Glob parser  All three levels use backslash (`++\\++`) as the escaping character. So you need to use an appropriate number of backslashes depending on which level you want to escape. \n Note that Quarkus extensions typically include the resources they require by themselves. This option is useful in situations when the built-in functionality is not sufficient.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"includes","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.native"}},{"configDocKey":{"type":"boolean","key":"quarkus.native.debug.enabled","configDoc":"If debug is enabled and debug symbols are generated. The symbols will be generated in a separate .debug file.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"enabled","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.native"}}]