[{"configDocKey":{"type":"boolean","key":"quarkus.keycloak.devservices.enabled","configDoc":"If DevServices has been explicitly enabled or disabled. \n When DevServices is enabled Quarkus will attempt to automatically configure and start Keycloak when running in Dev or Test mode and when Docker is running.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"enabled","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.keycloak"}},{"configDocKey":{"type":"string","key":"quarkus.keycloak.devservices.image-name","configDoc":"The container image name to use, for container based DevServices providers.","withinAMap":false,"defaultValue":"quay.io/keycloak/keycloak:14.0.0","javaDocSiteLink":"","docMapKey":"image-name","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.keycloak"}},{"configDocKey":{"type":"string","key":"quarkus.keycloak.devservices.realm-path","configDoc":"The class or file system path to a Keycloak realm file which will be used to initialize Keycloak.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"realm-path","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.keycloak"}},{"configDocKey":{"type":"string","key":"quarkus.keycloak.devservices.java-opts","configDoc":"The JAVA_OPTS passed to the keycloak JVM","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"java-opts","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.keycloak"}},{"configDocKey":{"type":"string","key":"quarkus.keycloak.devservices.realm-name","configDoc":"The Keycloak realm. This property will be used to create the realm if the realm file pointed to by the 'realm-path' property does not exist. Setting this property is recommended even if realm file exists for `quarkus.oidc.auth-server-url` property be correctly calculated.","withinAMap":false,"defaultValue":"quarkus","javaDocSiteLink":"","docMapKey":"realm-name","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.keycloak"}},{"configDocKey":{"type":"`Map<String,String>`","key":"quarkus.keycloak.devservices.users","configDoc":"The Keycloak users map containing the user name and password pairs. If this map is empty then two users, 'alice' and 'bob' with the passwords matching their names will be created. This property will be used to create the Keycloak users if the realm file pointed to by the 'realm-path' property does not exist.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"users","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":true,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.keycloak"}},{"configDocKey":{"type":"`Map<String,String>`","key":"quarkus.keycloak.devservices.roles","configDoc":"The Keycloak user roles. If this map is empty then a user named 'alice' will get 'admin' and 'user' roles and all other users will get a 'user' role. This property will be used to create the Keycloak roles if the realm file pointed to by the 'realm-path' property does not exist.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"roles","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":true,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.keycloak"}},{"configDocKey":{"type":"io.quarkus.oidc.deployment.devservices.keycloak.DevServicesConfig.Grant.Type","key":"quarkus.keycloak.devservices.grant.type","configDoc":"Grant type which will be used to acquire a token to test the OIDC 'service' applications","withinAMap":false,"defaultValue":"code","javaDocSiteLink":"","docMapKey":"type","configPhase":"BUILD_TIME","acceptedValues":["client","password","code","implicit"],"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.keycloak"}},{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.keycloak.devservices.port","configDoc":"Optional fixed port the dev service will listen to. \n If not defined, the port will be chosen randomly.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"port","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.keycloak"}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.keycloak.devservices.web-clien-timeout","configDoc":"The WebClient timeout. Use this property to configure how long an HTTP client will wait for a response when requesting tokens from Keycloak and sending them to the service endpoint.","withinAMap":false,"defaultValue":"4S","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"web-clien-timeout","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.keycloak"}}]