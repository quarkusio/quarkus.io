[{"configDocKey":{"type":"string","key":".db-kind","additionalKeys":[],"configDoc":"The kind of database we will connect to (e.g. h2, postgresql...).","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"db-kind","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".db-version","additionalKeys":[],"configDoc":"The version of the database we will connect to (e.g. '10.0').\n\nCAUTION: The version number set here should follow the same numbering scheme\nas the string returned by `java.sql.DatabaseMetaData#getDatabaseProductVersion()`\nfor your database's JDBC driver.\nThis numbering scheme may be different from the most popular one for your database;\nfor example Microsoft SQL Server 2016 would be version `13`.\n\nAs a rule, the version set here should be as high as possible,\nbut must be lower than or equal to the version of any database your application will connect to.\n\nA high version will allow better performance and using more features\n(e.g. Hibernate ORM may generate more efficient SQL,\navoid workarounds and take advantage of more database features),\nbut if it is higher than the version of the database you want to connect to,\nit may lead to runtime exceptions\n(e.g. Hibernate ORM may generate invalid SQL that your database will reject).\n\nSome extensions (like the Hibernate ORM extension)\nwill try to check this version against the actual database version on startup,\nleading to a startup failure when the actual version is lower\nor simply a warning in case the database cannot be reached.\n\nThe default for this property is specific to each extension;\nthe Hibernate ORM extension will default to the oldest version it supports.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"db-version","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocSection":{"name":"","optional":false,"withinAMap":false,"sectionDetails":null,"sectionDetailsTitle":".devservices","configPhase":"BUILD_TIME","topLevelGrouping":"","configGroupType":"io.quarkus.datasource.runtime.DevServicesBuildTimeConfig","showSection":false,"configDocItems":[{"configDocKey":{"type":"java.lang.Boolean","key":".devservices.enabled","additionalKeys":[],"configDoc":"If DevServices has been explicitly enabled or disabled. DevServices is generally enabled by default unless an existing configuration is present. When DevServices is enabled, Quarkus will attempt to automatically configure and start a database when running in Dev or Test mode.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"enabled","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".devservices.image-name","additionalKeys":[],"configDoc":"The container image name for container-based DevServices providers. This has no effect if the provider is not a container-based database, such as H2 or Derby.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"image-name","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"`Map<String,String>`","key":".devservices.container-env","additionalKeys":[],"configDoc":"Environment variables that are passed to the container.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"container-env","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":true,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"`Map<String,String>`","key":".devservices.container-properties","additionalKeys":[],"configDoc":"Generic properties that are passed for additional container configuration.\n\nProperties defined here are database-specific and are interpreted specifically in each database dev service implementation.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"container-properties","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":true,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"`Map<String,String>`","key":".devservices.properties","additionalKeys":[],"configDoc":"Generic properties that are added to the database connection URL.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"properties","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":true,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":".devservices.port","additionalKeys":[],"configDoc":"Optional fixed port the dev service will listen to.\n\nIf not defined, the port will be chosen randomly.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"port","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".devservices.command","additionalKeys":[],"configDoc":"The container start command to use for container-based DevServices providers. This has no effect if the provider is not a container-based database, such as H2 or Derby.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"command","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".devservices.db-name","additionalKeys":[],"configDoc":"The database name to use if this Dev Service supports overriding it.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"db-name","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".devservices.username","additionalKeys":[],"configDoc":"The username to use if this Dev Service supports overriding it.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"username","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".devservices.password","additionalKeys":[],"configDoc":"The password to use if this Dev Service supports overriding it.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"password","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".devservices.init-script-path","additionalKeys":[],"configDoc":"The path to a SQL script to be loaded from the classpath and applied to the Dev Service database. This has no effect if the provider is not a container-based database, such as H2 or Derby.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"init-script-path","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"`Map<String,String>`","key":".devservices.volumes","additionalKeys":[],"configDoc":"The volumes to be mapped to the container. The map key corresponds to the host location; the map value is the container location. If the host location starts with \"classpath:\", the mapping loads the resource from the classpath with read-only permission. When using a file system location, the volume will be generated with read-write permission, potentially leading to data loss or modification in your file system. This has no effect if the provider is not a container-based database, such as H2 or Derby.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"volumes","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":true,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}}],"anchorPrefix":null}},{"configDocKey":{"type":"boolean","key":".health-exclude","additionalKeys":[],"configDoc":"Whether this particular data source should be excluded from the health check if the general health check for data sources is enabled.\n\nBy default, the health check includes all configured data sources (if it is enabled).","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"health-exclude","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}}]