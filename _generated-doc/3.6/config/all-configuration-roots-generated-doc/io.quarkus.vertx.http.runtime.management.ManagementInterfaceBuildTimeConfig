[{"configDocKey":{"type":"boolean","key":"quarkus.management.enabled","additionalKeys":[],"configDoc":"Enables / Disables the usage of a separate interface/port to expose the management endpoints. If sets to `true`, the management endpoints will be exposed to a different HTTP server. This avoids exposing the management endpoints on a publicly available server.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"enabled","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.management","enum":false}},{"configDocKey":{"type":"java.lang.Boolean","key":"quarkus.management.auth.basic","additionalKeys":[],"configDoc":"If basic auth should be enabled.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"basic","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.management.auth.proactive","additionalKeys":[],"configDoc":"If this is true and credentials are present then a user will always be authenticated before the request progresses. If this is false then an attempt will only be made to authenticate the user if a permission check is performed or the current user is required for some other reason.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"proactive","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","enum":false}},{"configDocKey":{"type":"io.vertx.core.http.ClientAuth","key":"quarkus.management.ssl.client-auth","additionalKeys":[],"configDoc":"Configures the engine to require/request client authentication. NONE, REQUEST, REQUIRED","withinAMap":false,"defaultValue":"none","javaDocSiteLink":"https://vertx.io/docs/apidocs/io/vertx/core/http/ClientAuth.html","docMapKey":"tls-client-auth","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":["`none`","`request`","`required`"],"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.management","enum":true}},{"configDocKey":{"type":"string","key":"quarkus.management.root-path","additionalKeys":[],"configDoc":"A common root path for management endpoints. Various extension-provided management endpoints such as metrics and health are deployed under this path by default.","withinAMap":false,"defaultValue":"/q","javaDocSiteLink":"","docMapKey":"root-path","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.management","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.management.enable-compression","additionalKeys":[],"configDoc":"If responses should be compressed.\n\nNote that this will attempt to compress all responses, to avoid compressing already compressed content (such as images) you need to set the following header:\n\nContent-Encoding: identity\n\nWhich will tell vert.x not to compress the response.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"enable-compression","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.management","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.management.enable-decompression","additionalKeys":[],"configDoc":"When enabled, vert.x will decompress the request's body if it's compressed.\n\nNote that the compression format (e.g., gzip) must be specified in the Content-Encoding header in the request.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"enable-decompression","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.management","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.management.compression-level","additionalKeys":[],"configDoc":"The compression level used when compression support is enabled.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"compression-level","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.management","enum":false}}]