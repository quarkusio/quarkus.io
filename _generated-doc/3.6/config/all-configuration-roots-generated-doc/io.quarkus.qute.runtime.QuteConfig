[{"configDocKey":{"type":"string","key":"quarkus.qute.suffixes","additionalKeys":[],"configDoc":"The list of suffixes used when attempting to locate a template file.\n\nBy default, `engine.getTemplate(\"foo\")` would result in several lookups: `foo`, `foo.html`, `foo.txt`, etc.","withinAMap":false,"defaultValue":"qute.html,qute.txt,html,txt","javaDocSiteLink":"","docMapKey":"suffixes","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":true,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.qute","enum":false}},{"configDocKey":{"type":"`Map<String,String>`","key":"quarkus.qute.content-types","additionalKeys":[],"configDoc":"The additional map of suffixes to content types. This map is used when working with template variants. By default, the `java.net.URLConnection++#++getFileNameMap()` is used to determine the content type of a template file.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"content-types","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":true,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.qute","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.qute.type-check-excludes","additionalKeys":[],"configDoc":"The list of exclude rules used to intentionally ignore some parts of an expression when performing type-safe validation.\n\nAn element value must have at least two parts separated by dot. The last part is used to match the property/method name. The prepended parts are used to match the class name. The value `++*++` can be used to match any name.\n\nExamples:\n\n - `org.acme.Foo.name` - exclude the property/method `name` on the `org.acme.Foo` class\n - `org.acme.Foo.++*++` - exclude any property/method on the `org.acme.Foo` class\n - `++*++.age` - exclude the property/method `age` on any class","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"type-check-excludes","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.qute","enum":false}},{"configDocKey":{"type":"java.util.regex.Pattern","key":"quarkus.qute.template-path-exclude","additionalKeys":[],"configDoc":"This regular expression is used to exclude template files from the `templates` directory. Excluded templates are neither parsed nor validated during build and are not available at runtime.\n\nThe matched input is the file path relative from the `templates` directory and the `/` is used as a path separator.\n\nBy default, the hidden files are excluded. The name of a hidden file starts with a dot.","withinAMap":false,"defaultValue":"^\\..*|.*\\/\\..*$","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html","docMapKey":"template-path-exclude","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.qute","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.qute.iteration-metadata-prefix","additionalKeys":[],"configDoc":"The prefix is used to access the iteration metadata inside a loop section.\n\nA valid prefix consists of alphanumeric characters and underscores. Three special constants can be used:\n\n - `<alias_>` - the alias of an iterated element suffixed with an underscore is used, e.g. `item_hasNext` and `it_count`\n - `<alias?>` - the alias of an iterated element suffixed with a question mark is used, e.g. `item?hasNext` and `it?count`\n - `<none>` - no prefix is used, e.g. `hasNext` and `count`  By default, the `<alias_>` constant is set.","withinAMap":false,"defaultValue":"<alias_>","javaDocSiteLink":"","docMapKey":"iteration-metadata-prefix","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.qute","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.qute.escape-content-types","additionalKeys":[],"configDoc":"The list of content types for which the `'`, `\"`, `<`, `>` and `&` characters are escaped if a template variant is set.","withinAMap":false,"defaultValue":"text/html,text/xml,application/xml,application/xhtml+xml","javaDocSiteLink":"","docMapKey":"escape-content-types","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":true,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.qute","enum":false}},{"configDocKey":{"type":"java.nio.charset.Charset","key":"quarkus.qute.default-charset","additionalKeys":[],"configDoc":"The default charset of the templates files.","withinAMap":false,"defaultValue":"UTF-8","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/nio/charset/Charset.html","docMapKey":"default-charset","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.qute","enum":false}},{"configDocKey":{"type":"java.util.regex.Pattern","key":"quarkus.qute.dev-mode.no-restart-templates","additionalKeys":[],"configDoc":"By default, a template modification results in an application restart that triggers build-time validations.\n\nThis regular expression can be used to specify the templates for which the application is not restarted. I.e. the templates are reloaded and only runtime validations are performed.\n\nThe matched input is the template path that starts with a template root, and the `/` is used as a path separator. For example, `templates/foo.html`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html","docMapKey":"no-restart-templates","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.qute","enum":false}}]