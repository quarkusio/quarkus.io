[{"configDocKey":{"type":"string","key":".roles-allowed","additionalKeys":[],"configDoc":"The roles that are allowed to access resources protected by this policy. By default, access is allowed to any authenticated user.","withinAMap":false,"defaultValue":"**","javaDocSiteLink":"","docMapKey":"roles-allowed","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":true,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_ROLES_ALLOWED","enum":false}},{"configDocKey":{"type":"java.util.List","key":".roles.\"role-name\"","additionalKeys":[],"configDoc":"Add roles granted to the `SecurityIdentity` based on the roles that the `SecurityIdentity` already have. For example, the Quarkus OIDC extension can map roles from the verified JWT access token, and you may want to remap them to a deployment specific roles.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/util/List.html","docMapKey":"role-name","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_ROLES__ROLE_NAME_","enum":false}},{"configDocKey":{"type":"java.util.List","key":".permissions.\"role-name\"","additionalKeys":[],"configDoc":"Permissions granted to the `SecurityIdentity` if this policy is applied successfully (the policy allows request to proceed) and the authenticated request has required role. For example, you can map permission `perm1` with actions `action1` and `action2` to role `admin` by setting `quarkus.http.auth.policy.role-policy1.permissions.admin=perm1:action1,perm1:action2` configuration property. Granted permissions are used for authorization with the `@PermissionsAllowed` annotation.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/util/List.html","docMapKey":"role-name","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_PERMISSIONS__ROLE_NAME_","enum":false}},{"configDocKey":{"type":"string","key":".permission-class","additionalKeys":[],"configDoc":"Permissions granted by this policy will be created with a `java.security.Permission` implementation specified by this configuration property. The permission class must declare exactly one constructor that accepts permission name (`String`) or permission name and actions (`String`, `String++[]++`). Permission class must be registered for reflection if you run your application in a native mode.","withinAMap":false,"defaultValue":"io.quarkus.security.StringPermission","javaDocSiteLink":"","docMapKey":"permission-class","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_PERMISSION_CLASS","enum":false}}]