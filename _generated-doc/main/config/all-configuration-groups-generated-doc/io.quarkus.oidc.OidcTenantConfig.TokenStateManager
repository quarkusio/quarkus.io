[{"configDocKey":{"type":"io.quarkus.oidc.OidcTenantConfig.TokenStateManager.Strategy","key":".strategy","additionalKeys":[],"configDoc":"Default TokenStateManager strategy.","withinAMap":false,"defaultValue":"keep-all-tokens","javaDocSiteLink":"","docMapKey":"strategy","configPhase":"BUILD_TIME","acceptedValues":["tooltip:keep-all-tokens[Keep ID, access and refresh tokens.]","tooltip:id-token[Keep ID token only]","tooltip:id-refresh-tokens[Keep ID and refresh tokens only]"],"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_STRATEGY","enum":true}},{"configDocKey":{"type":"boolean","key":".split-tokens","additionalKeys":[],"configDoc":"Default TokenStateManager keeps all tokens (ID, access and refresh) returned in the authorization code grant response in a single session cookie by default. Enable this property to minimize a session cookie size","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"split-tokens","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_SPLIT_TOKENS","enum":false}},{"configDocKey":{"type":"boolean","key":".encryption-required","additionalKeys":[],"configDoc":"Mandates that the Default TokenStateManager encrypt the session cookie that stores the tokens.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"encryption-required","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_ENCRYPTION_REQUIRED","enum":false}},{"configDocKey":{"type":"string","key":".encryption-secret","additionalKeys":[],"configDoc":"The secret used by the Default TokenStateManager to encrypt the session cookie storing the tokens when `encryption-required` property is enabled.\n\nIf this secret is not set, the client secret configured with either `quarkus.oidc.credentials.secret` or `quarkus.oidc.credentials.client-secret.value` is checked. Finally, `quarkus.oidc.credentials.jwt.secret` which can be used for `client_jwt_secret` authentication is checked. The secret is auto-generated if it remains uninitialized after checking all of these properties.\n\nThe length of the secret used to encrypt the tokens should be at least 32 characters long. A warning is logged if the secret length is less than 16 characters.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"encryption-secret","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_ENCRYPTION_SECRET","enum":false}},{"configDocKey":{"type":"io.quarkus.oidc.OidcTenantConfig.TokenStateManager.EncryptionAlgorithm","key":".encryption-algorithm","additionalKeys":[],"configDoc":"Session cookie key encryption algorithm","withinAMap":false,"defaultValue":"a256-gcmkw","javaDocSiteLink":"","docMapKey":"encryption-algorithm","configPhase":"BUILD_TIME","acceptedValues":["tooltip:a256-gcmkw[Content encryption key will be generated and encrypted using the A256GCMKW algorithm and the configured encryption secret. The generated content encryption key will be used to encrypt the session cookie content.]","tooltip:dir[The configured key encryption secret will be used as the content encryption key to encrypt the session cookie content. Using the direct encryption avoids a content encryption key generation step and will make the encrypted session cookie sequence slightly shorter.  Avoid using the direct encryption if the encryption secret is less than 32 characters long.]"],"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_ENCRYPTION_ALGORITHM","enum":true}}]