[{"configDocKey":{"type":"string","key":".secret","additionalKeys":[],"configDoc":"The client secret used by the `client_secret_basic` authentication method. Must be set unless a secret is set in `client-secret` or `jwt` client authentication is required. You can use `client-secret.value` instead, but both properties are mutually exclusive.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"secret","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_SECRET","enum":false}},{"configDocSection":{"name":"","optional":false,"withinAMap":false,"sectionDetails":null,"sectionDetailsTitle":".client-secret","configPhase":"BUILD_TIME","topLevelGrouping":"","configGroupType":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Credentials.Secret","showSection":false,"configDocItems":[{"configDocKey":{"type":"string","key":".client-secret.value","additionalKeys":[],"configDoc":"The client secret value. This value is ignored if `credentials.secret` is set. Must be set unless a secret is set in `client-secret` or `jwt` client authentication is required.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"value","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CLIENT_SECRET_VALUE","enum":false}},{"configDocKey":{"type":"string","key":".client-secret.provider.name","additionalKeys":[],"configDoc":"The CredentialsProvider bean name, which should only be set if more than one CredentialsProvider is registered","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"name","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CLIENT_SECRET_PROVIDER_NAME","enum":false}},{"configDocKey":{"type":"string","key":".client-secret.provider.keyring-name","additionalKeys":[],"configDoc":"The CredentialsProvider keyring name. The keyring name is only required when the CredentialsProvider being used requires the keyring name to look up the secret, which is often the case when a CredentialsProvider is shared by multiple extensions to retrieve credentials from a more dynamic source like a vault instance or secret manager","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"keyring-name","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CLIENT_SECRET_PROVIDER_KEYRING_NAME","enum":false}},{"configDocKey":{"type":"string","key":".client-secret.provider.key","additionalKeys":[],"configDoc":"The CredentialsProvider client secret key","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CLIENT_SECRET_PROVIDER_KEY","enum":false}},{"configDocKey":{"type":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Credentials.Secret.Method","key":".client-secret.method","additionalKeys":[],"configDoc":"The authentication method. If the `clientSecret.value` secret is set, this method is `basic` by default.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"method","configPhase":"BUILD_TIME","acceptedValues":["tooltip:basic[`client_secret_basic` (default): The client id and secret are submitted with the HTTP Authorization Basic scheme.]","tooltip:post[`client_secret_post`: The client id and secret are submitted as the `client_id` and `client_secret` form parameters.]","tooltip:post-jwt[`client_secret_jwt`: The client id and generated JWT secret are submitted as the `client_id` and `client_secret` form parameters.]","tooltip:query[client id and secret are submitted as HTTP query parameters. This option is only supported by the OIDC extension.]"],"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CLIENT_SECRET_METHOD","enum":true}}],"anchorPrefix":null}},{"configDocSection":{"name":"","optional":false,"withinAMap":false,"sectionDetails":null,"sectionDetailsTitle":".jwt","configPhase":"BUILD_TIME","topLevelGrouping":"","configGroupType":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Credentials.Jwt","showSection":false,"configDocItems":[{"configDocKey":{"type":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Credentials.Jwt.Source","key":".jwt.source","additionalKeys":[],"configDoc":"JWT token source: OIDC provider client or an existing JWT bearer token.","withinAMap":false,"defaultValue":"client","javaDocSiteLink":"","docMapKey":"source","configPhase":"BUILD_TIME","acceptedValues":["`client`","`bearer`"],"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_JWT_SOURCE","enum":true}},{"configDocKey":{"type":"string","key":".jwt.secret","additionalKeys":[],"configDoc":"If provided, indicates that JWT is signed using a secret key.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"secret","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_JWT_SECRET","enum":false}},{"configDocKey":{"type":"string","key":".jwt.secret-provider.name","additionalKeys":[],"configDoc":"The CredentialsProvider bean name, which should only be set if more than one CredentialsProvider is registered","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"name","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_JWT_SECRET_PROVIDER_NAME","enum":false}},{"configDocKey":{"type":"string","key":".jwt.secret-provider.keyring-name","additionalKeys":[],"configDoc":"The CredentialsProvider keyring name. The keyring name is only required when the CredentialsProvider being used requires the keyring name to look up the secret, which is often the case when a CredentialsProvider is shared by multiple extensions to retrieve credentials from a more dynamic source like a vault instance or secret manager","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"keyring-name","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_JWT_SECRET_PROVIDER_KEYRING_NAME","enum":false}},{"configDocKey":{"type":"string","key":".jwt.secret-provider.key","additionalKeys":[],"configDoc":"The CredentialsProvider client secret key","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_JWT_SECRET_PROVIDER_KEY","enum":false}},{"configDocKey":{"type":"string","key":".jwt.key","additionalKeys":[],"configDoc":"String representation of a private key. If provided, indicates that JWT is signed using a private key in PEM or JWK format. You can use the `signature-algorithm` property to override the default key algorithm, `RS256`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_JWT_KEY","enum":false}},{"configDocKey":{"type":"string","key":".jwt.key-file","additionalKeys":[],"configDoc":"If provided, indicates that JWT is signed using a private key in PEM or JWK format. You can use the `signature-algorithm` property to override the default key algorithm, `RS256`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-file","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_JWT_KEY_FILE","enum":false}},{"configDocKey":{"type":"string","key":".jwt.key-store-file","additionalKeys":[],"configDoc":"If provided, indicates that JWT is signed using a private key from a keystore.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-file","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_JWT_KEY_STORE_FILE","enum":false}},{"configDocKey":{"type":"string","key":".jwt.key-store-password","additionalKeys":[],"configDoc":"A parameter to specify the password of the keystore file.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-password","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_JWT_KEY_STORE_PASSWORD","enum":false}},{"configDocKey":{"type":"string","key":".jwt.key-id","additionalKeys":[],"configDoc":"The private key id or alias.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-id","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_JWT_KEY_ID","enum":false}},{"configDocKey":{"type":"string","key":".jwt.key-password","additionalKeys":[],"configDoc":"The private key password.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-password","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_JWT_KEY_PASSWORD","enum":false}},{"configDocKey":{"type":"string","key":".jwt.audience","additionalKeys":[],"configDoc":"The JWT audience (`aud`) claim value. By default, the audience is set to the address of the OpenId Connect Provider's token endpoint.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"audience","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_JWT_AUDIENCE","enum":false}},{"configDocKey":{"type":"string","key":".jwt.token-key-id","additionalKeys":[],"configDoc":"The key identifier of the signing key added as a JWT `kid` header.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"token-key-id","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_JWT_TOKEN_KEY_ID","enum":false}},{"configDocKey":{"type":"string","key":".jwt.issuer","additionalKeys":[],"configDoc":"The issuer of the signing key added as a JWT `iss` claim. The default value is the client id.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"issuer","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_JWT_ISSUER","enum":false}},{"configDocKey":{"type":"string","key":".jwt.subject","additionalKeys":[],"configDoc":"Subject of the signing key added as a JWT `sub` claim The default value is the client id.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"subject","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_JWT_SUBJECT","enum":false}},{"configDocKey":{"type":"java.lang.String","key":".jwt.claims.\"claim-name\"","additionalKeys":[],"configDoc":"Additional claims.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html","docMapKey":"claim-name","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_JWT_CLAIMS__CLAIM_NAME_","enum":false}},{"configDocKey":{"type":"string","key":".jwt.signature-algorithm","additionalKeys":[],"configDoc":"The signature algorithm used for the `key-file` property. Supported values: `RS256` (default), `RS384`, `RS512`, `PS256`, `PS384`, `PS512`, `ES256`, `ES384`, `ES512`, `HS256`, `HS384`, `HS512`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"signature-algorithm","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_JWT_SIGNATURE_ALGORITHM","enum":false}},{"configDocKey":{"type":"int","key":".jwt.lifespan","additionalKeys":[],"configDoc":"The JWT lifespan in seconds. This value is added to the time at which the JWT was issued to calculate the expiration time.","withinAMap":false,"defaultValue":"10","javaDocSiteLink":"","docMapKey":"lifespan","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_JWT_LIFESPAN","enum":false}},{"configDocKey":{"type":"boolean","key":".jwt.assertion","additionalKeys":[],"configDoc":"If true then the client authentication token is a JWT bearer grant assertion. Instead of producing 'client_assertion' and 'client_assertion_type' form properties, only 'assertion' is produced. This option is only supported by the OIDC client extension.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"assertion","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_JWT_ASSERTION","enum":false}}],"anchorPrefix":null}}]