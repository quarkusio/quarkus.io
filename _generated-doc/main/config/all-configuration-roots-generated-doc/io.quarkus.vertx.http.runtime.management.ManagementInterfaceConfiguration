[{"configDocKey":{"type":"java.lang.Boolean","key":"quarkus.management.auth.permission.\"permissions\".enabled","additionalKeys":[],"configDoc":"Determines whether the entire permission set is enabled, or not. By default, if the permission set is defined, it is enabled.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"enabled","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_AUTH_PERMISSION__PERMISSIONS__ENABLED","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.auth.permission.\"permissions\".policy","additionalKeys":[],"configDoc":"The HTTP policy that this permission set is linked to. There are three built-in policies: permit, deny and authenticated. Role based policies can be defined, and extensions can add their own policies.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"policy","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_AUTH_PERMISSION__PERMISSIONS__POLICY","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.auth.permission.\"permissions\".methods","additionalKeys":[],"configDoc":"The methods that this permission set applies to. If this is not set then they apply to all methods. Note that if a request matches any path from any permission set, but does not match the constraint due to the method not being listed then the request will be denied. Method specific permissions take precedence over matches that do not have any methods set. This means that for example if Quarkus is configured to allow GET and POST requests to /admin to and no other permissions are configured PUT requests to /admin will be denied.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"methods","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_AUTH_PERMISSION__PERMISSIONS__METHODS","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.auth.permission.\"permissions\".paths","additionalKeys":[],"configDoc":"The paths that this permission check applies to. If the path ends in /++*++ then this is treated as a path prefix, otherwise it is treated as an exact match. Matches are done on a length basis, so the most specific path match takes precedence. If multiple permission sets match the same path then explicit methods matches take precedence over matches without methods set, otherwise the most restrictive permissions are applied.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"paths","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_AUTH_PERMISSION__PERMISSIONS__PATHS","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.auth.permission.\"permissions\".auth-mechanism","additionalKeys":[],"configDoc":"Path specific authentication mechanism which must be used to authenticate a user. It needs to match `HttpCredentialTransport` authentication scheme such as 'basic', 'bearer', 'form', etc.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"auth-mechanism","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_AUTH_PERMISSION__PERMISSIONS__AUTH_MECHANISM","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.management.auth.permission.\"permissions\".shared","additionalKeys":[],"configDoc":"Indicates that this policy always applies to the matched paths in addition to the policy with a winning path. Avoid creating more than one shared policy to minimize the performance impact.","withinAMap":true,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"shared","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_AUTH_PERMISSION__PERMISSIONS__SHARED","enum":false}},{"configDocKey":{"type":"io.quarkus.vertx.http.runtime.PolicyMappingConfig.AppliesTo","key":"quarkus.management.auth.permission.\"permissions\".applies-to","additionalKeys":[],"configDoc":"Whether permission check should be applied on all matching paths, or paths specific for the Jakarta REST resources.","withinAMap":true,"defaultValue":"all","javaDocSiteLink":"","docMapKey":"applies-to","configPhase":"RUN_TIME","acceptedValues":["tooltip:all[Apply on all matching paths.]","tooltip:jaxrs[Declares that a permission check must only be applied on the Jakarta REST request paths. Use this option to delay the permission check if an authentication mechanism is chosen with an annotation on the matching Jakarta REST endpoint. This option must be set if the following REST endpoint annotations are used:   - `io.quarkus.oidc.Tenant` annotation which selects an OIDC authentication mechanism with a tenant identifier  - `io.quarkus.vertx.http.runtime.security.annotation.BasicAuthentication` which selects the Basic authentication mechanism  - `io.quarkus.vertx.http.runtime.security.annotation.FormAuthentication` which selects the Form-based authentication mechanism  - `io.quarkus.vertx.http.runtime.security.annotation.MTLSAuthentication` which selects the mTLS authentication mechanism  - `io.quarkus.security.webauthn.WebAuthn` which selects the WebAuth authentication mechanism  - `io.quarkus.oidc.BearerTokenAuthentication` which selects the OpenID Connect Bearer token authentication mechanism  - `io.quarkus.oidc.AuthorizationCodeFlow` which selects the OpenID Connect Code authentication mechanism]"],"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_AUTH_PERMISSION__PERMISSIONS__APPLIES_TO","enum":true}},{"configDocKey":{"type":"string","key":"quarkus.management.auth.policy.\"role-policy\".roles-allowed","additionalKeys":[],"configDoc":"The roles that are allowed to access resources protected by this policy. By default, access is allowed to any authenticated user.","withinAMap":true,"defaultValue":"**","javaDocSiteLink":"","docMapKey":"roles-allowed","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":true,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_AUTH_POLICY__ROLE_POLICY__ROLES_ALLOWED","enum":false}},{"configDocKey":{"type":"java.util.List","key":"quarkus.management.auth.policy.\"role-policy\".roles.\"role-name\"","additionalKeys":[],"configDoc":"Add roles granted to the `SecurityIdentity` based on the roles that the `SecurityIdentity` already have. For example, the Quarkus OIDC extension can map roles from the verified JWT access token, and you may want to remap them to a deployment specific roles.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/util/List.html","docMapKey":"role-name","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_AUTH_POLICY__ROLE_POLICY__ROLES__ROLE_NAME_","enum":false}},{"configDocKey":{"type":"java.util.List","key":"quarkus.management.auth.policy.\"role-policy\".permissions.\"role-name\"","additionalKeys":[],"configDoc":"Permissions granted to the `SecurityIdentity` if this policy is applied successfully (the policy allows request to proceed) and the authenticated request has required role. For example, you can map permission `perm1` with actions `action1` and `action2` to role `admin` by setting `quarkus.http.auth.policy.role-policy1.permissions.admin=perm1:action1,perm1:action2` configuration property. Granted permissions are used for authorization with the `@PermissionsAllowed` annotation.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/util/List.html","docMapKey":"role-name","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_AUTH_POLICY__ROLE_POLICY__PERMISSIONS__ROLE_NAME_","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.auth.policy.\"role-policy\".permission-class","additionalKeys":[],"configDoc":"Permissions granted by this policy will be created with a `java.security.Permission` implementation specified by this configuration property. The permission class must declare exactly one constructor that accepts permission name (`String`) or permission name and actions (`String`, `String++[]++`). Permission class must be registered for reflection if you run your application in a native mode.","withinAMap":true,"defaultValue":"io.quarkus.security.StringPermission","javaDocSiteLink":"","docMapKey":"permission-class","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_AUTH_POLICY__ROLE_POLICY__PERMISSION_CLASS","enum":false}},{"configDocKey":{"type":"java.util.List","key":"quarkus.management.auth.roles-mapping.\"role-name\"","additionalKeys":[],"configDoc":"Map the `SecurityIdentity` roles to deployment specific roles and add the matching roles to `SecurityIdentity`.\n\nFor example, if `SecurityIdentity` has a `user` role and the endpoint is secured with a 'UserRole' role, use this property to map the `user` role to the `UserRole` role, and have `SecurityIdentity` to have both `user` and `UserRole` roles.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/util/List.html","docMapKey":"role-name","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_AUTH_ROLES_MAPPING__ROLE_NAME_","enum":false}},{"configDocKey":{"type":"int","key":"quarkus.management.port","additionalKeys":[],"configDoc":"The HTTP port","withinAMap":false,"defaultValue":"9000","javaDocSiteLink":"","docMapKey":"port","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_PORT","enum":false}},{"configDocKey":{"type":"int","key":"quarkus.management.test-port","additionalKeys":[],"configDoc":"The HTTP port","withinAMap":false,"defaultValue":"9001","javaDocSiteLink":"","docMapKey":"test-port","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_TEST_PORT","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.host","additionalKeys":[],"configDoc":"The HTTP host Defaults to 0.0.0.0 Defaulting to 0.0.0.0 makes it easier to deploy Quarkus to container, however it is not suitable for dev/test mode as other people on the network can connect to your development machine.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"host","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_HOST","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.management.host-enabled","additionalKeys":[],"configDoc":"Enable listening to host:port","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"host-enabled","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_HOST_ENABLED","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.ssl.certificate.credentials-provider","additionalKeys":[],"configDoc":"The `CredentialsProvider`. If this property is configured, then a matching 'CredentialsProvider' will be used to get the keystore, keystore key, and truststore passwords unless these passwords have already been configured.\n\nPlease note that using MicroProfile `ConfigSource` which is directly supported by Quarkus Configuration should be preferred unless using `CredentialsProvider` provides for some additional security and dynamism.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"credentials-provider","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_SSL_CERTIFICATE_CREDENTIALS_PROVIDER","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.ssl.certificate.credentials-provider-name","additionalKeys":[],"configDoc":"The credentials provider bean name.\n\nThis is a bean name (as in `@Named`) of a bean that implements `CredentialsProvider`. It is used to select the credentials provider bean when multiple exist. This is unnecessary when there is only one credentials provider available.\n\nFor Vault, the credentials provider bean name is `vault-credentials-provider`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"credentials-provider-name","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_SSL_CERTIFICATE_CREDENTIALS_PROVIDER_NAME","enum":false}},{"configDocKey":{"type":"path","key":"quarkus.management.ssl.certificate.files","additionalKeys":[],"configDoc":"The list of path to server certificates using the PEM format. Specifying multiple files requires SNI to be enabled.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"files","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_SSL_CERTIFICATE_FILES","enum":false}},{"configDocKey":{"type":"path","key":"quarkus.management.ssl.certificate.key-files","additionalKeys":[],"configDoc":"The list of path to server certificates private key files using the PEM format. Specifying multiple files requires SNI to be enabled.\n\nThe order of the key files must match the order of the certificates.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-files","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_FILES","enum":false}},{"configDocKey":{"type":"path","key":"quarkus.management.ssl.certificate.key-store-file","additionalKeys":[],"configDoc":"An optional keystore that holds the certificate information instead of specifying separate files.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-file","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_STORE_FILE","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.ssl.certificate.key-store-file-type","additionalKeys":[],"configDoc":"An optional parameter to specify the type of the keystore file. If not given, the type is automatically detected based on the file name.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-file-type","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_STORE_FILE_TYPE","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.ssl.certificate.key-store-provider","additionalKeys":[],"configDoc":"An optional parameter to specify a provider of the keystore file. If not given, the provider is automatically detected based on the keystore file type.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-provider","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_STORE_PROVIDER","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.ssl.certificate.key-store-password","additionalKeys":[],"configDoc":"A parameter to specify the password of the keystore file. If not given, and if it can not be retrieved from `CredentialsProvider`.","withinAMap":false,"defaultValue":"password","javaDocSiteLink":"","docMapKey":"key-store-password","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_STORE_PASSWORD","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.ssl.certificate.key-store-password-key","additionalKeys":[],"configDoc":"A parameter to specify a `CredentialsProvider` property key, which can be used to get the password of the key store file from `CredentialsProvider`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-password-key","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_STORE_PASSWORD_KEY","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.ssl.certificate.key-store-alias","additionalKeys":[],"configDoc":"An optional parameter to select a specific key in the keystore. When SNI is disabled, and the keystore contains multiple keys and no alias is specified; the behavior is undefined.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-alias","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_STORE_ALIAS","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.ssl.certificate.key-store-alias-password","additionalKeys":[],"configDoc":"An optional parameter to define the password for the key, in case it is different from `key-store-password` If not given, it might be retrieved from `CredentialsProvider`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-alias-password","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_STORE_ALIAS_PASSWORD","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.ssl.certificate.key-store-alias-password-key","additionalKeys":[],"configDoc":"A parameter to specify a `CredentialsProvider` property key, which can be used to get the password for the alias from `CredentialsProvider`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-alias-password-key","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_STORE_ALIAS_PASSWORD_KEY","enum":false}},{"configDocKey":{"type":"path","key":"quarkus.management.ssl.certificate.trust-store-file","additionalKeys":[],"configDoc":"An optional trust store that holds the certificate information of the trusted certificates.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-file","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_SSL_CERTIFICATE_TRUST_STORE_FILE","enum":false}},{"configDocKey":{"type":"path","key":"quarkus.management.ssl.certificate.trust-store-files","additionalKeys":[],"configDoc":"An optional list of trusted certificates using the PEM format. If you pass multiple files, you must use the PEM format.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-files","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_SSL_CERTIFICATE_TRUST_STORE_FILES","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.ssl.certificate.trust-store-file-type","additionalKeys":[],"configDoc":"An optional parameter to specify the type of the trust store file. If not given, the type is automatically detected based on the file name.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-file-type","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_SSL_CERTIFICATE_TRUST_STORE_FILE_TYPE","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.ssl.certificate.trust-store-provider","additionalKeys":[],"configDoc":"An optional parameter to specify a provider of the trust store file. If not given, the provider is automatically detected based on the trust store file type.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-provider","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_SSL_CERTIFICATE_TRUST_STORE_PROVIDER","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.ssl.certificate.trust-store-password","additionalKeys":[],"configDoc":"A parameter to specify the password of the trust store file. If not given, it might be retrieved from `CredentialsProvider`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-password","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_SSL_CERTIFICATE_TRUST_STORE_PASSWORD","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.ssl.certificate.trust-store-password-key","additionalKeys":[],"configDoc":"A parameter to specify a `CredentialsProvider` property key, which can be used to get the password of the trust store file from `CredentialsProvider`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-password-key","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_SSL_CERTIFICATE_TRUST_STORE_PASSWORD_KEY","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.ssl.certificate.trust-store-cert-alias","additionalKeys":[],"configDoc":"An optional parameter to trust a single certificate from the trust store rather than trusting all certificates in the store.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-cert-alias","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_SSL_CERTIFICATE_TRUST_STORE_CERT_ALIAS","enum":false}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.management.ssl.certificate.reload-period","additionalKeys":[],"configDoc":"When set, the configured certificate will be reloaded after the given period. Note that the certificate will be reloaded only if the file has been modified.\n\nAlso, the update can also occur when the TLS certificate is configured using paths (and not in-memory).\n\nThe reload period must be equal or greater than 30 seconds. If not set, the certificate will not be reloaded.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"reload-period","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_SSL_CERTIFICATE_RELOAD_PERIOD","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.ssl.cipher-suites","additionalKeys":[],"configDoc":"The cipher suites to use. If none is given, a reasonable default is selected.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"cipher-suites","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_SSL_CIPHER_SUITES","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.ssl.protocols","additionalKeys":[],"configDoc":"Sets the ordered list of enabled SSL/TLS protocols.\n\nIf not set, it defaults to `\"TLSv1.3, TLSv1.2\"`. The following list of protocols are supported: `TLSv1, TLSv1.1, TLSv1.2, TLSv1.3`. To only enable `TLSv1.3`, set the value to `to \"TLSv1.3\"`.\n\nNote that setting an empty list, and enabling SSL/TLS is invalid. You must at least have one protocol.","withinAMap":false,"defaultValue":"TLSv1.3,TLSv1.2","javaDocSiteLink":"","docMapKey":"protocols","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":true,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_SSL_PROTOCOLS","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.management.ssl.sni","additionalKeys":[],"configDoc":"Enables Server Name Indication (SNI), an TLS extension allowing the server to use multiple certificates. The client indicate the server name during the TLS handshake, allowing the server to select the right certificate.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"sni","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_SSL_SNI","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.management.handle-100-continue-automatically","additionalKeys":[],"configDoc":"When set to `true`, the HTTP server automatically sends `100 CONTINUE` response when the request expects it (with the `Expect: 100-Continue` header).","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"handle100-continue-automatically","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_HANDLE_100_CONTINUE_AUTOMATICALLY","enum":false}},{"configDocKey":{"type":"io.quarkus.runtime.configuration.MemorySize","key":"quarkus.management.limits.max-header-size","additionalKeys":[],"configDoc":"The maximum length of all headers.","withinAMap":false,"defaultValue":"20K","javaDocSiteLink":"","docMapKey":"max-header-size","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_LIMITS_MAX_HEADER_SIZE","enum":false}},{"configDocKey":{"type":"io.quarkus.runtime.configuration.MemorySize","key":"quarkus.management.limits.max-body-size","additionalKeys":[],"configDoc":"The maximum size of a request body.","withinAMap":false,"defaultValue":"10240K","javaDocSiteLink":"","docMapKey":"max-body-size","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_LIMITS_MAX_BODY_SIZE","enum":false}},{"configDocKey":{"type":"io.quarkus.runtime.configuration.MemorySize","key":"quarkus.management.limits.max-chunk-size","additionalKeys":[],"configDoc":"The max HTTP chunk size","withinAMap":false,"defaultValue":"8192","javaDocSiteLink":"","docMapKey":"max-chunk-size","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_LIMITS_MAX_CHUNK_SIZE","enum":false}},{"configDocKey":{"type":"int","key":"quarkus.management.limits.max-initial-line-length","additionalKeys":[],"configDoc":"The maximum length of the initial line (e.g. `\"GET / HTTP/1.0\"`).","withinAMap":false,"defaultValue":"4096","javaDocSiteLink":"","docMapKey":"max-initial-line-length","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_LIMITS_MAX_INITIAL_LINE_LENGTH","enum":false}},{"configDocKey":{"type":"io.quarkus.runtime.configuration.MemorySize","key":"quarkus.management.limits.max-form-attribute-size","additionalKeys":[],"configDoc":"The maximum length of a form attribute.","withinAMap":false,"defaultValue":"2048","javaDocSiteLink":"","docMapKey":"max-form-attribute-size","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_LIMITS_MAX_FORM_ATTRIBUTE_SIZE","enum":false}},{"configDocKey":{"type":"int","key":"quarkus.management.limits.max-form-fields","additionalKeys":[],"configDoc":"Set the maximum number of fields of a form. Set to `-1` to allow unlimited number of attributes.","withinAMap":false,"defaultValue":"256","javaDocSiteLink":"","docMapKey":"max-form-fields","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_LIMITS_MAX_FORM_FIELDS","enum":false}},{"configDocKey":{"type":"io.quarkus.runtime.configuration.MemorySize","key":"quarkus.management.limits.max-form-buffered-bytes","additionalKeys":[],"configDoc":"Set the maximum number of bytes a server can buffer when decoding a form. Set to `-1` to allow unlimited length","withinAMap":false,"defaultValue":"1K","javaDocSiteLink":"","docMapKey":"max-form-buffered-bytes","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_LIMITS_MAX_FORM_BUFFERED_BYTES","enum":false}},{"configDocKey":{"type":"int","key":"quarkus.management.limits.max-parameters","additionalKeys":[],"configDoc":"The maximum number of HTTP request parameters permitted for incoming requests.\n\nIf a client sends more than this number of parameters in a request, the connection is closed.","withinAMap":false,"defaultValue":"1000","javaDocSiteLink":"","docMapKey":"max-parameters","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_LIMITS_MAX_PARAMETERS","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.management.limits.max-connections","additionalKeys":[],"configDoc":"The maximum number of connections that are allowed at any one time. If this is set it is recommended to set a short idle timeout.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"max-connections","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_LIMITS_MAX_CONNECTIONS","enum":false}},{"configDocKey":{"type":"java.lang.Long","key":"quarkus.management.limits.header-table-size","additionalKeys":[],"configDoc":"Set the SETTINGS_HEADER_TABLE_SIZE HTTP/2 setting.\n\nAllows the sender to inform the remote endpoint of the maximum size of the header compression table used to decode header blocks, in octets. The encoder can select any size equal to or less than this value by using signaling specific to the header compression format inside a header block. The initial value is `4,096` octets.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"header-table-size","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_LIMITS_HEADER_TABLE_SIZE","enum":false}},{"configDocKey":{"type":"java.lang.Long","key":"quarkus.management.limits.max-concurrent-streams","additionalKeys":[],"configDoc":"Set SETTINGS_MAX_CONCURRENT_STREAMS HTTP/2 setting.\n\nIndicates the maximum number of concurrent streams that the sender will allow. This limit is directional: it applies to the number of streams that the sender permits the receiver to create. Initially, there is no limit to this value. It is recommended that this value be no smaller than 100, to not unnecessarily limit parallelism.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"max-concurrent-streams","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_LIMITS_MAX_CONCURRENT_STREAMS","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.management.limits.max-frame-size","additionalKeys":[],"configDoc":"Set the SETTINGS_MAX_FRAME_SIZE HTTP/2 setting. Indicates the size of the largest frame payload that the sender is willing to receive, in octets. The initial value is `2^14` (16,384) octets.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"max-frame-size","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_LIMITS_MAX_FRAME_SIZE","enum":false}},{"configDocKey":{"type":"java.lang.Long","key":"quarkus.management.limits.max-header-list-size","additionalKeys":[],"configDoc":"Set the SETTINGS_MAX_HEADER_LIST_SIZE HTTP/2 setting. This advisory setting informs a peer of the maximum size of header list that the sender is prepared to accept, in octets. The value is based on the uncompressed size of header fields, including the length of the name and value in octets plus an overhead of 32 octets for each header field. The default value is `8192`","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"max-header-list-size","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_LIMITS_MAX_HEADER_LIST_SIZE","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.management.limits.rst-flood-max-rst-frame-per-window","additionalKeys":[],"configDoc":"Set the max number of RST frame allowed per time window, this is used to prevent link:https://github.com/netty/netty/security/advisories/GHSA-xpw8-rcwv-8f8p[HTTP/2 RST frame flood DDOS attacks]. The default value is `200`, setting zero or a negative value, disables flood protection.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"rst-flood-max-rst-frame-per-window","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_LIMITS_RST_FLOOD_MAX_RST_FRAME_PER_WINDOW","enum":false}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.management.limits.rst-flood-window-duration","additionalKeys":[],"configDoc":"Set the duration of the time window when checking the max number of RST frames, this is used to prevent link:https://github.com/netty/netty/security/advisories/GHSA-xpw8-rcwv-8f8p[HTTP/2 RST frame flood DDOS attacks].. The default value is `30 s`, setting zero or a negative value, disables flood protection.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"rst-flood-window-duration","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_LIMITS_RST_FLOOD_WINDOW_DURATION","enum":false}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.management.idle-timeout","additionalKeys":[],"configDoc":"Http connection idle timeout","withinAMap":false,"defaultValue":"30M","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"idle-timeout","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_IDLE_TIMEOUT","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.management.body.handle-file-uploads","additionalKeys":[],"configDoc":"Whether the files sent using `multipart/form-data` will be stored locally.\n\nIf `true`, they will be stored in `quarkus.http.body-handler.uploads-directory` and will be made available via `io.vertx.ext.web.RoutingContext.fileUploads()`. Otherwise, the files sent using `multipart/form-data` will not be stored locally, and `io.vertx.ext.web.RoutingContext.fileUploads()` will always return an empty collection. Note that even with this option being set to `false`, the `multipart/form-data` requests will be accepted.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"handle-file-uploads","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_BODY_HANDLE_FILE_UPLOADS","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.body.uploads-directory","additionalKeys":[],"configDoc":"The directory where the files sent using `multipart/form-data` should be stored.\n\nEither an absolute path or a path relative to the current directory of the application process.","withinAMap":false,"defaultValue":"${java.io.tmpdir}/uploads","javaDocSiteLink":"","docMapKey":"uploads-directory","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_BODY_UPLOADS_DIRECTORY","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.management.body.merge-form-attributes","additionalKeys":[],"configDoc":"Whether the form attributes should be added to the request parameters.\n\nIf `true`, the form attributes will be added to the request parameters; otherwise the form parameters will not be added to the request parameters","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"merge-form-attributes","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_BODY_MERGE_FORM_ATTRIBUTES","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.management.body.delete-uploaded-files-on-end","additionalKeys":[],"configDoc":"Whether the uploaded files should be removed after serving the request.\n\nIf `true` the uploaded files stored in `quarkus.http.body-handler.uploads-directory` will be removed after handling the request. Otherwise, the files will be left there forever.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"delete-uploaded-files-on-end","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_BODY_DELETE_UPLOADED_FILES_ON_END","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.management.body.preallocate-body-buffer","additionalKeys":[],"configDoc":"Whether the body buffer should pre-allocated based on the `Content-Length` header value.\n\nIf `true` the body buffer is pre-allocated according to the size read from the `Content-Length` header. Otherwise, the body buffer is pre-allocated to 1KB, and is resized dynamically","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"preallocate-body-buffer","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_BODY_PREALLOCATE_BODY_BUFFER","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.body.multipart.file-content-types","additionalKeys":[],"configDoc":"A comma-separated list of `ContentType` to indicate whether a given multipart field should be handled as a file part. You can use this setting to force HTTP-based extensions to parse a message part as a file based on its content type. For now, this setting only works when using RESTEasy Reactive.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"file-content-types","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_BODY_MULTIPART_FILE_CONTENT_TYPES","enum":false}},{"configDocKey":{"type":"int","key":"quarkus.management.accept-backlog","additionalKeys":[],"configDoc":"The accept backlog, this is how many connections can be waiting to be accepted before connections start being rejected","withinAMap":false,"defaultValue":"-1","javaDocSiteLink":"","docMapKey":"accept-backlog","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_ACCEPT_BACKLOG","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.domain-socket","additionalKeys":[],"configDoc":"Path to a unix domain socket","withinAMap":false,"defaultValue":"/var/run/io.quarkus.management.socket","javaDocSiteLink":"","docMapKey":"domain-socket","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_DOMAIN_SOCKET","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.management.domain-socket-enabled","additionalKeys":[],"configDoc":"Enable listening to host:port","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"domain-socket-enabled","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_DOMAIN_SOCKET_ENABLED","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.header.\"header\".path","additionalKeys":[],"configDoc":"The path this header should be applied","withinAMap":true,"defaultValue":"/*","javaDocSiteLink":"","docMapKey":"path","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_HEADER__HEADER__PATH","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.header.\"header\".value","additionalKeys":[],"configDoc":"The value for this header configuration","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"value","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_HEADER__HEADER__VALUE","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.header.\"header\".methods","additionalKeys":[],"configDoc":"The HTTP methods for this header configuration","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"methods","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_HEADER__HEADER__METHODS","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.filter.\"filter\".matches","additionalKeys":[],"configDoc":"A regular expression for the paths matching this configuration","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"matches","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_FILTER__FILTER__MATCHES","enum":false}},{"configDocKey":{"type":"java.lang.String","key":"quarkus.management.filter.\"filter\".header.\"header-name\"","additionalKeys":[],"configDoc":"Additional HTTP Headers always sent in the response","withinAMap":true,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html","docMapKey":"header-name","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_FILTER__FILTER__HEADER__HEADER_NAME_","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.filter.\"filter\".methods","additionalKeys":[],"configDoc":"The HTTP methods for this path configuration","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"methods","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_FILTER__FILTER__METHODS","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.management.filter.\"filter\".order","additionalKeys":[],"configDoc":"","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"order","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_FILTER__FILTER__ORDER","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.management.proxy.use-proxy-protocol","additionalKeys":[],"configDoc":"Set whether the server should use the HA `PROXY` protocol when serving requests from behind a proxy. (see the link:https://www.haproxy.org/download/1.8/doc/proxy-protocol.txt[PROXY Protocol]). When set to `true`, the remote address returned will be the one from the actual connecting client. If it is set to `false` (default), the remote address returned will be the one from the proxy.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"use-proxy-protocol","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_PROXY_USE_PROXY_PROTOCOL","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.management.proxy.proxy-address-forwarding","additionalKeys":[],"configDoc":"If this is true then the address, scheme etc. will be set from headers forwarded by the proxy server, such as `X-Forwarded-For`. This should only be set if you are behind a proxy that sets these headers.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"proxy-address-forwarding","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_PROXY_PROXY_ADDRESS_FORWARDING","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.management.proxy.allow-forwarded","additionalKeys":[],"configDoc":"If this is true and proxy address forwarding is enabled then the standard `Forwarded` header will be used. In case the not standard `X-Forwarded-For` header is enabled and detected on HTTP requests, the standard header has the precedence. Activating this together with `quarkus.http.proxy.allow-x-forwarded` has security implications as clients can forge requests with a forwarded header that is not overwritten by the proxy. Therefore, proxies should strip unexpected `X-Forwarded` or `X-Forwarded-++*++` headers from the client.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"allow-forwarded","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_PROXY_ALLOW_FORWARDED","enum":false}},{"configDocKey":{"type":"java.lang.Boolean","key":"quarkus.management.proxy.allow-x-forwarded","additionalKeys":[],"configDoc":"If either this or `allow-forwarded` are true and proxy address forwarding is enabled then the not standard `Forwarded` header will be used. In case the standard `Forwarded` header is enabled and detected on HTTP requests, the standard header has the precedence. Activating this together with `quarkus.http.proxy.allow-forwarded` has security implications as clients can forge requests with a forwarded header that is not overwritten by the proxy. Therefore, proxies should strip unexpected `X-Forwarded` or `X-Forwarded-++*++` headers from the client.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"allow-x-forwarded","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_PROXY_ALLOW_X_FORWARDED","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.management.proxy.enable-forwarded-host","additionalKeys":[],"configDoc":"Enable override the received request's host through a forwarded host header.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"enable-forwarded-host","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_PROXY_ENABLE_FORWARDED_HOST","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.proxy.forwarded-host-header","additionalKeys":[],"configDoc":"Configure the forwarded host header to be used if override enabled.","withinAMap":false,"defaultValue":"X-Forwarded-Host","javaDocSiteLink":"","docMapKey":"forwarded-host-header","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_PROXY_FORWARDED_HOST_HEADER","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.management.proxy.enable-forwarded-prefix","additionalKeys":[],"configDoc":"Enable prefix the received request's path with a forwarded prefix header.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"enable-forwarded-prefix","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_PROXY_ENABLE_FORWARDED_PREFIX","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.management.proxy.forwarded-prefix-header","additionalKeys":[],"configDoc":"Configure the forwarded prefix header to be used if prefixing enabled.","withinAMap":false,"defaultValue":"X-Forwarded-Prefix","javaDocSiteLink":"","docMapKey":"forwarded-prefix-header","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_PROXY_FORWARDED_PREFIX_HEADER","enum":false}},{"configDocKey":{"type":"io.quarkus.vertx.http.runtime.TrustedProxyCheck.TrustedProxyCheckPart","key":"quarkus.management.proxy.trusted-proxies","additionalKeys":[],"configDoc":"Configure the list of trusted proxy addresses. Received `Forwarded`, `X-Forwarded` or `X-Forwarded-++*++` headers from any other proxy address will be ignored. The trusted proxy address should be specified as the IP address (IPv4 or IPv6), hostname or Classless Inter-Domain Routing (CIDR) notation. Please note that Quarkus needs to perform DNS lookup for all hostnames during the request. For that reason, using hostnames is not recommended.\n\nExamples of a socket address in the form of `host` or `host:port`:\n\n - `127.0.0.1:8084`\n - `++[++0:0:0:0:0:0:0:1++]++`\n - `++[++0:0:0:0:0:0:0:1++]++:8084`\n - `++[++::++]++`\n - `localhost`\n - `localhost:8084`\n\nExamples of a CIDR notation:\n\n - `::/128`\n - `::/0`\n - `127.0.0.0/8`\n\nPlease bear in mind that IPv4 CIDR won't match request sent from the IPv6 address and the other way around.","withinAMap":false,"defaultValue":"All proxy addresses are trusted","javaDocSiteLink":"","docMapKey":"trusted-proxies","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.management","since":null,"environmentVariable":"QUARKUS_MANAGEMENT_PROXY_TRUSTED_PROXIES","enum":false}}]