[{"configDocKey":{"type":"string","key":"quarkus.oidc-client.auth-server-url","additionalKeys":[],"configDoc":"The base URL of the OpenID Connect (OIDC) server, for example, `https://host:port/auth`. Do not set this property if the public key verification (`public-key`) or certificate chain verification only (`certificate-chain`) is required. The OIDC discovery endpoint is called by default by appending a `.well-known/openid-configuration` path to this URL. For Keycloak, use `https://host:port/realms/++{++realm++}++`, replacing `++{++realm++}++` with the Keycloak realm name.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"auth-server-url","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_AUTH_SERVER_URL","enum":false}},{"configDocKey":{"type":"java.lang.Boolean","key":"quarkus.oidc-client.discovery-enabled","additionalKeys":[],"configDoc":"Discovery of the OIDC endpoints. If not enabled, you must configure the OIDC endpoint URLs individually.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"discovery-enabled","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_DISCOVERY_ENABLED","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.token-path","additionalKeys":[],"configDoc":"The OIDC token endpoint that issues access and refresh tokens; specified as a relative path or absolute URL. Set if `discovery-enabled` is `false` or a discovered token endpoint path must be customized.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"token-path","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_TOKEN_PATH","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.revoke-path","additionalKeys":[],"configDoc":"The relative path or absolute URL of the OIDC token revocation endpoint.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"revoke-path","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_REVOKE_PATH","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.client-id","additionalKeys":[],"configDoc":"The client id of the application. Each application has a client id that is used to identify the application. Setting the client id is not required if `application-type` is `service` and no token introspection is required.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"client-id","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CLIENT_ID","enum":false}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.oidc-client.connection-delay","additionalKeys":[],"configDoc":"The duration to attempt the initial connection to an OIDC server. For example, setting the duration to `20S` allows 10 retries, each 2 seconds apart. This property is only effective when the initial OIDC connection is created. For dropped connections, use the `connection-retry-count` property instead.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"connection-delay","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CONNECTION_DELAY","enum":false}},{"configDocKey":{"type":"int","key":"quarkus.oidc-client.connection-retry-count","additionalKeys":[],"configDoc":"The number of times to retry re-establishing an existing OIDC connection if it is temporarily lost. Different from `connection-delay`, which applies only to initial connection attempts. For instance, if a request to the OIDC token endpoint fails due to a connection issue, it will be retried as per this setting.","withinAMap":false,"defaultValue":"3","javaDocSiteLink":"","docMapKey":"connection-retry-count","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CONNECTION_RETRY_COUNT","enum":false}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.oidc-client.connection-timeout","additionalKeys":[],"configDoc":"The number of seconds after which the current OIDC connection request times out.","withinAMap":false,"defaultValue":"10S","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"connection-timeout","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CONNECTION_TIMEOUT","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.oidc-client.use-blocking-dns-lookup","additionalKeys":[],"configDoc":"Whether DNS lookup should be performed on the worker thread. Use this option when you can see logged warnings about blocked Vert.x event loop by HTTP requests to OIDC server.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"use-blocking-dns-lookup","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_USE_BLOCKING_DNS_LOOKUP","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.oidc-client.max-pool-size","additionalKeys":[],"configDoc":"The maximum size of the connection pool used by the WebClient.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"max-pool-size","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_MAX_POOL_SIZE","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.credentials.secret","additionalKeys":[],"configDoc":"The client secret used by the `client_secret_basic` authentication method. Must be set unless a secret is set in `client-secret` or `jwt` client authentication is required. You can use `client-secret.value` instead, but both properties are mutually exclusive.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"secret","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CREDENTIALS_SECRET","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.credentials.client-secret.value","additionalKeys":[],"configDoc":"The client secret value. This value is ignored if `credentials.secret` is set. Must be set unless a secret is set in `client-secret` or `jwt` client authentication is required.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"value","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CREDENTIALS_CLIENT_SECRET_VALUE","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.credentials.client-secret.provider.name","additionalKeys":[],"configDoc":"The CredentialsProvider bean name, which should only be set if more than one CredentialsProvider is registered","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"name","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CREDENTIALS_CLIENT_SECRET_PROVIDER_NAME","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.credentials.client-secret.provider.keyring-name","additionalKeys":[],"configDoc":"The CredentialsProvider keyring name. The keyring name is only required when the CredentialsProvider being used requires the keyring name to look up the secret, which is often the case when a CredentialsProvider is shared by multiple extensions to retrieve credentials from a more dynamic source like a vault instance or secret manager","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"keyring-name","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CREDENTIALS_CLIENT_SECRET_PROVIDER_KEYRING_NAME","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.credentials.client-secret.provider.key","additionalKeys":[],"configDoc":"The CredentialsProvider client secret key","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CREDENTIALS_CLIENT_SECRET_PROVIDER_KEY","enum":false}},{"configDocKey":{"type":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Credentials.Secret.Method","key":"quarkus.oidc-client.credentials.client-secret.method","additionalKeys":[],"configDoc":"The authentication method. If the `clientSecret.value` secret is set, this method is `basic` by default.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"method","configPhase":"RUN_TIME","acceptedValues":["tooltip:basic[`client_secret_basic` (default): The client id and secret are submitted with the HTTP Authorization Basic scheme.]","tooltip:post[`client_secret_post`: The client id and secret are submitted as the `client_id` and `client_secret` form parameters.]","tooltip:post-jwt[`client_secret_jwt`: The client id and generated JWT secret are submitted as the `client_id` and `client_secret` form parameters.]","tooltip:query[client id and secret are submitted as HTTP query parameters. This option is only supported by the OIDC extension.]"],"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CREDENTIALS_CLIENT_SECRET_METHOD","enum":true}},{"configDocKey":{"type":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Credentials.Jwt.Source","key":"quarkus.oidc-client.credentials.jwt.source","additionalKeys":[],"configDoc":"JWT token source: OIDC provider client or an existing JWT bearer token.","withinAMap":false,"defaultValue":"client","javaDocSiteLink":"","docMapKey":"source","configPhase":"RUN_TIME","acceptedValues":["`client`","`bearer`"],"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CREDENTIALS_JWT_SOURCE","enum":true}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.credentials.jwt.secret","additionalKeys":[],"configDoc":"If provided, indicates that JWT is signed using a secret key.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"secret","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CREDENTIALS_JWT_SECRET","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.credentials.jwt.secret-provider.name","additionalKeys":[],"configDoc":"The CredentialsProvider bean name, which should only be set if more than one CredentialsProvider is registered","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"name","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CREDENTIALS_JWT_SECRET_PROVIDER_NAME","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.credentials.jwt.secret-provider.keyring-name","additionalKeys":[],"configDoc":"The CredentialsProvider keyring name. The keyring name is only required when the CredentialsProvider being used requires the keyring name to look up the secret, which is often the case when a CredentialsProvider is shared by multiple extensions to retrieve credentials from a more dynamic source like a vault instance or secret manager","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"keyring-name","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CREDENTIALS_JWT_SECRET_PROVIDER_KEYRING_NAME","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.credentials.jwt.secret-provider.key","additionalKeys":[],"configDoc":"The CredentialsProvider client secret key","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CREDENTIALS_JWT_SECRET_PROVIDER_KEY","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.credentials.jwt.key","additionalKeys":[],"configDoc":"String representation of a private key. If provided, indicates that JWT is signed using a private key in PEM or JWK format. You can use the `signature-algorithm` property to override the default key algorithm, `RS256`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CREDENTIALS_JWT_KEY","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.credentials.jwt.key-file","additionalKeys":[],"configDoc":"If provided, indicates that JWT is signed using a private key in PEM or JWK format. You can use the `signature-algorithm` property to override the default key algorithm, `RS256`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-file","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CREDENTIALS_JWT_KEY_FILE","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.credentials.jwt.key-store-file","additionalKeys":[],"configDoc":"If provided, indicates that JWT is signed using a private key from a keystore.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-file","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CREDENTIALS_JWT_KEY_STORE_FILE","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.credentials.jwt.key-store-password","additionalKeys":[],"configDoc":"A parameter to specify the password of the keystore file.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-password","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CREDENTIALS_JWT_KEY_STORE_PASSWORD","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.credentials.jwt.key-id","additionalKeys":[],"configDoc":"The private key id or alias.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-id","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CREDENTIALS_JWT_KEY_ID","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.credentials.jwt.key-password","additionalKeys":[],"configDoc":"The private key password.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-password","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CREDENTIALS_JWT_KEY_PASSWORD","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.credentials.jwt.audience","additionalKeys":[],"configDoc":"The JWT audience (`aud`) claim value. By default, the audience is set to the address of the OpenId Connect Provider's token endpoint.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"audience","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CREDENTIALS_JWT_AUDIENCE","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.credentials.jwt.token-key-id","additionalKeys":[],"configDoc":"The key identifier of the signing key added as a JWT `kid` header.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"token-key-id","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CREDENTIALS_JWT_TOKEN_KEY_ID","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.credentials.jwt.issuer","additionalKeys":[],"configDoc":"The issuer of the signing key added as a JWT `iss` claim. The default value is the client id.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"issuer","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CREDENTIALS_JWT_ISSUER","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.credentials.jwt.subject","additionalKeys":[],"configDoc":"Subject of the signing key added as a JWT `sub` claim The default value is the client id.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"subject","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CREDENTIALS_JWT_SUBJECT","enum":false}},{"configDocKey":{"type":"java.lang.String","key":"quarkus.oidc-client.credentials.jwt.claims.\"claim-name\"","additionalKeys":[],"configDoc":"Additional claims.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html","docMapKey":"claim-name","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CREDENTIALS_JWT_CLAIMS__CLAIM_NAME_","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.credentials.jwt.signature-algorithm","additionalKeys":[],"configDoc":"The signature algorithm used for the `key-file` property. Supported values: `RS256` (default), `RS384`, `RS512`, `PS256`, `PS384`, `PS512`, `ES256`, `ES384`, `ES512`, `HS256`, `HS384`, `HS512`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"signature-algorithm","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CREDENTIALS_JWT_SIGNATURE_ALGORITHM","enum":false}},{"configDocKey":{"type":"int","key":"quarkus.oidc-client.credentials.jwt.lifespan","additionalKeys":[],"configDoc":"The JWT lifespan in seconds. This value is added to the time at which the JWT was issued to calculate the expiration time.","withinAMap":false,"defaultValue":"10","javaDocSiteLink":"","docMapKey":"lifespan","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CREDENTIALS_JWT_LIFESPAN","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.oidc-client.credentials.jwt.assertion","additionalKeys":[],"configDoc":"If true then the client authentication token is a JWT bearer grant assertion. Instead of producing 'client_assertion' and 'client_assertion_type' form properties, only 'assertion' is produced. This option is only supported by the OIDC client extension.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"assertion","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CREDENTIALS_JWT_ASSERTION","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.proxy.host","additionalKeys":[],"configDoc":"The host name or IP address of the Proxy. +\nNote: If the OIDC adapter requires a Proxy to talk with the OIDC server (Provider), set this value to enable the usage of a Proxy.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"host","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_PROXY_HOST","enum":false}},{"configDocKey":{"type":"int","key":"quarkus.oidc-client.proxy.port","additionalKeys":[],"configDoc":"The port number of the Proxy. The default value is `80`.","withinAMap":false,"defaultValue":"80","javaDocSiteLink":"","docMapKey":"port","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_PROXY_PORT","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.proxy.username","additionalKeys":[],"configDoc":"The username, if the Proxy needs authentication.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"username","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_PROXY_USERNAME","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.proxy.password","additionalKeys":[],"configDoc":"The password, if the Proxy needs authentication.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"password","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_PROXY_PASSWORD","enum":false}},{"configDocKey":{"type":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Tls.Verification","key":"quarkus.oidc-client.tls.verification","additionalKeys":[],"configDoc":"Certificate validation and hostname verification, which can be one of the following `Verification` values. Default is `required`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"verification","configPhase":"RUN_TIME","acceptedValues":["tooltip:required[Certificates are validated and hostname verification is enabled. This is the default value.]","tooltip:certificate-validation[Certificates are validated but hostname verification is disabled.]","tooltip:none[All certificates are trusted and hostname verification is disabled.]"],"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_TLS_VERIFICATION","enum":true}},{"configDocKey":{"type":"path","key":"quarkus.oidc-client.tls.key-store-file","additionalKeys":[],"configDoc":"An optional keystore that holds the certificate information instead of specifying separate files.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-file","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_TLS_KEY_STORE_FILE","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.tls.key-store-file-type","additionalKeys":[],"configDoc":"The type of the keystore file. If not given, the type is automatically detected based on the file name.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-file-type","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_TLS_KEY_STORE_FILE_TYPE","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.tls.key-store-provider","additionalKeys":[],"configDoc":"The provider of the keystore file. If not given, the provider is automatically detected based on the keystore file type.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-provider","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_TLS_KEY_STORE_PROVIDER","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.tls.key-store-password","additionalKeys":[],"configDoc":"The password of the keystore file. If not given, the default value, `password`, is used.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-password","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_TLS_KEY_STORE_PASSWORD","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.tls.key-store-key-alias","additionalKeys":[],"configDoc":"The alias of a specific key in the keystore. When SNI is disabled, if the keystore contains multiple keys and no alias is specified, the behavior is undefined.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-key-alias","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_TLS_KEY_STORE_KEY_ALIAS","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.tls.key-store-key-password","additionalKeys":[],"configDoc":"The password of the key, if it is different from the `key-store-password`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-key-password","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_TLS_KEY_STORE_KEY_PASSWORD","enum":false}},{"configDocKey":{"type":"path","key":"quarkus.oidc-client.tls.trust-store-file","additionalKeys":[],"configDoc":"The truststore that holds the certificate information of the certificates to trust.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-file","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_TLS_TRUST_STORE_FILE","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.tls.trust-store-password","additionalKeys":[],"configDoc":"The password of the truststore file.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-password","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_TLS_TRUST_STORE_PASSWORD","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.tls.trust-store-cert-alias","additionalKeys":[],"configDoc":"The alias of the truststore certificate.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-cert-alias","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_TLS_TRUST_STORE_CERT_ALIAS","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.tls.trust-store-file-type","additionalKeys":[],"configDoc":"The type of the truststore file. If not given, the type is automatically detected based on the file name.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-file-type","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_TLS_TRUST_STORE_FILE_TYPE","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.tls.trust-store-provider","additionalKeys":[],"configDoc":"The provider of the truststore file. If not given, the provider is automatically detected based on the truststore file type.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-provider","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_TLS_TRUST_STORE_PROVIDER","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.id","additionalKeys":[],"configDoc":"A unique OIDC client identifier. It must be set when OIDC clients are created dynamically and is optional in all other cases.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"id","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_ID","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.oidc-client.client-enabled","additionalKeys":[],"configDoc":"If this client configuration is enabled.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"client-enabled","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_CLIENT_ENABLED","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.scopes","additionalKeys":[],"configDoc":"List of access token scopes","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"scopes","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_SCOPES","enum":false}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.oidc-client.refresh-token-time-skew","additionalKeys":[],"configDoc":"Refresh token time skew in seconds. If this property is enabled then the configured number of seconds is added to the current time when checking whether the access token should be refreshed. If the sum is greater than this access token's expiration time then a refresh is going to happen.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"refresh-token-time-skew","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_REFRESH_TOKEN_TIME_SKEW","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.oidc-client.absolute-expires-in","additionalKeys":[],"configDoc":"If the access token 'expires_in' property should be checked as an absolute time value as opposed to a duration relative to the current time.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"absolute-expires-in","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_ABSOLUTE_EXPIRES_IN","enum":false}},{"configDocKey":{"type":"io.quarkus.oidc.client.OidcClientConfig.Grant.Type","key":"quarkus.oidc-client.grant.type","additionalKeys":[],"configDoc":"Grant type","withinAMap":false,"defaultValue":"client","javaDocSiteLink":"","docMapKey":"type","configPhase":"RUN_TIME","acceptedValues":["tooltip:client['client_credentials' grant requiring an OIDC client authentication only]","tooltip:password['password' grant requiring both OIDC client and user ('username' and 'password') authentications]","tooltip:code['authorization_code' grant requiring an OIDC client authentication as well as at least 'code' and 'redirect_uri' parameters which must be passed to OidcClient at the token request time.]","tooltip:exchange['urn:ietf:params:oauth:grant-type:token-exchange' grant requiring an OIDC client authentication as well as at least 'subject_token' parameter which must be passed to OidcClient at the token request time.]","tooltip:jwt['urn:ietf:params:oauth:grant-type:jwt-bearer' grant requiring an OIDC client authentication as well as at least an 'assertion' parameter which must be passed to OidcClient at the token request time.]","tooltip:refresh['refresh_token' grant requiring an OIDC client authentication and a refresh token. Note, OidcClient supports this grant by default if an access token acquisition response contained a refresh token. However, in some cases, the refresh token is provided out of band, for example, it can be shared between several of the confidential client's services, etc. If 'quarkus.oidc-client.grant-type' is set to 'refresh' then `OidcClient` will only support refreshing the tokens.]","tooltip:ciba['urn:openid:params:grant-type:ciba' grant requiring an OIDC client authentication as well as 'auth_req_id' parameter which must be passed to OidcClient at the token request time.]","tooltip:device['urn:ietf:params:oauth:grant-type:device_code' grant requiring an OIDC client authentication as well as 'device_code' parameter which must be passed to OidcClient at the token request time.]"],"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_GRANT_TYPE","enum":true}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.grant.access-token-property","additionalKeys":[],"configDoc":"Access token property name in a token grant response","withinAMap":false,"defaultValue":"access_token","javaDocSiteLink":"","docMapKey":"access-token-property","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_GRANT_ACCESS_TOKEN_PROPERTY","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.grant.refresh-token-property","additionalKeys":[],"configDoc":"Refresh token property name in a token grant response","withinAMap":false,"defaultValue":"refresh_token","javaDocSiteLink":"","docMapKey":"refresh-token-property","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_GRANT_REFRESH_TOKEN_PROPERTY","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.grant.expires-in-property","additionalKeys":[],"configDoc":"Access token expiry property name in a token grant response","withinAMap":false,"defaultValue":"expires_in","javaDocSiteLink":"","docMapKey":"expires-in-property","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_GRANT_EXPIRES_IN_PROPERTY","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.grant.refresh-expires-in-property","additionalKeys":[],"configDoc":"Refresh token expiry property name in a token grant response","withinAMap":false,"defaultValue":"refresh_expires_in","javaDocSiteLink":"","docMapKey":"refresh-expires-in-property","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_GRANT_REFRESH_EXPIRES_IN_PROPERTY","enum":false}},{"configDocKey":{"type":"java.util.Map","key":"quarkus.oidc-client.grant-options.\"grant-name\"","additionalKeys":[],"configDoc":"Grant options","withinAMap":true,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html","docMapKey":"grant-name","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_GRANT_OPTIONS__GRANT_NAME_","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.oidc-client.early-tokens-acquisition","additionalKeys":[],"configDoc":"Requires that all filters which use 'OidcClient' acquire the tokens at the post-construct initialization time, possibly long before these tokens are used. This property should be disabled if the access token may expire before it is used for the first time and no refresh token is available.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"early-tokens-acquisition","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_EARLY_TOKENS_ACQUISITION","enum":false}},{"configDocKey":{"type":"java.lang.String","key":"quarkus.oidc-client.headers.\"headers\"","additionalKeys":[],"configDoc":"Custom HTTP headers which have to be sent to the token endpoint","withinAMap":true,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html","docMapKey":"headers","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT_HEADERS__HEADERS_","enum":false}},{"configDocSection":{"name":"quarkus.oidc-client.named-clients","optional":false,"withinAMap":false,"sectionDetails":"= Additional named clients","sectionDetailsTitle":"Additional named clients","configPhase":"RUN_TIME","topLevelGrouping":"quarkus.oidc-client","configGroupType":"io.quarkus.oidc.client.OidcClientConfig","showSection":true,"configDocItems":[{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".auth-server-url","additionalKeys":[],"configDoc":"The base URL of the OpenID Connect (OIDC) server, for example, `https://host:port/auth`. Do not set this property if the public key verification (`public-key`) or certificate chain verification only (`certificate-chain`) is required. The OIDC discovery endpoint is called by default by appending a `.well-known/openid-configuration` path to this URL. For Keycloak, use `https://host:port/realms/++{++realm++}++`, replacing `++{++realm++}++` with the Keycloak realm name.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"auth-server-url","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__AUTH_SERVER_URL","enum":false}},{"configDocKey":{"type":"java.lang.Boolean","key":"quarkus.oidc-client.\"id\".discovery-enabled","additionalKeys":[],"configDoc":"Discovery of the OIDC endpoints. If not enabled, you must configure the OIDC endpoint URLs individually.","withinAMap":true,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"discovery-enabled","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__DISCOVERY_ENABLED","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".token-path","additionalKeys":[],"configDoc":"The OIDC token endpoint that issues access and refresh tokens; specified as a relative path or absolute URL. Set if `discovery-enabled` is `false` or a discovered token endpoint path must be customized.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"token-path","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__TOKEN_PATH","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".revoke-path","additionalKeys":[],"configDoc":"The relative path or absolute URL of the OIDC token revocation endpoint.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"revoke-path","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__REVOKE_PATH","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".client-id","additionalKeys":[],"configDoc":"The client id of the application. Each application has a client id that is used to identify the application. Setting the client id is not required if `application-type` is `service` and no token introspection is required.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"client-id","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CLIENT_ID","enum":false}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.oidc-client.\"id\".connection-delay","additionalKeys":[],"configDoc":"The duration to attempt the initial connection to an OIDC server. For example, setting the duration to `20S` allows 10 retries, each 2 seconds apart. This property is only effective when the initial OIDC connection is created. For dropped connections, use the `connection-retry-count` property instead.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"connection-delay","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CONNECTION_DELAY","enum":false}},{"configDocKey":{"type":"int","key":"quarkus.oidc-client.\"id\".connection-retry-count","additionalKeys":[],"configDoc":"The number of times to retry re-establishing an existing OIDC connection if it is temporarily lost. Different from `connection-delay`, which applies only to initial connection attempts. For instance, if a request to the OIDC token endpoint fails due to a connection issue, it will be retried as per this setting.","withinAMap":true,"defaultValue":"3","javaDocSiteLink":"","docMapKey":"connection-retry-count","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CONNECTION_RETRY_COUNT","enum":false}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.oidc-client.\"id\".connection-timeout","additionalKeys":[],"configDoc":"The number of seconds after which the current OIDC connection request times out.","withinAMap":true,"defaultValue":"10S","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"connection-timeout","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CONNECTION_TIMEOUT","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.oidc-client.\"id\".use-blocking-dns-lookup","additionalKeys":[],"configDoc":"Whether DNS lookup should be performed on the worker thread. Use this option when you can see logged warnings about blocked Vert.x event loop by HTTP requests to OIDC server.","withinAMap":true,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"use-blocking-dns-lookup","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__USE_BLOCKING_DNS_LOOKUP","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.oidc-client.\"id\".max-pool-size","additionalKeys":[],"configDoc":"The maximum size of the connection pool used by the WebClient.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"max-pool-size","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__MAX_POOL_SIZE","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".credentials.secret","additionalKeys":[],"configDoc":"The client secret used by the `client_secret_basic` authentication method. Must be set unless a secret is set in `client-secret` or `jwt` client authentication is required. You can use `client-secret.value` instead, but both properties are mutually exclusive.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"secret","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CREDENTIALS_SECRET","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".credentials.client-secret.value","additionalKeys":[],"configDoc":"The client secret value. This value is ignored if `credentials.secret` is set. Must be set unless a secret is set in `client-secret` or `jwt` client authentication is required.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"value","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CREDENTIALS_CLIENT_SECRET_VALUE","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".credentials.client-secret.provider.name","additionalKeys":[],"configDoc":"The CredentialsProvider bean name, which should only be set if more than one CredentialsProvider is registered","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"name","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CREDENTIALS_CLIENT_SECRET_PROVIDER_NAME","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".credentials.client-secret.provider.keyring-name","additionalKeys":[],"configDoc":"The CredentialsProvider keyring name. The keyring name is only required when the CredentialsProvider being used requires the keyring name to look up the secret, which is often the case when a CredentialsProvider is shared by multiple extensions to retrieve credentials from a more dynamic source like a vault instance or secret manager","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"keyring-name","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CREDENTIALS_CLIENT_SECRET_PROVIDER_KEYRING_NAME","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".credentials.client-secret.provider.key","additionalKeys":[],"configDoc":"The CredentialsProvider client secret key","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CREDENTIALS_CLIENT_SECRET_PROVIDER_KEY","enum":false}},{"configDocKey":{"type":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Credentials.Secret.Method","key":"quarkus.oidc-client.\"id\".credentials.client-secret.method","additionalKeys":[],"configDoc":"The authentication method. If the `clientSecret.value` secret is set, this method is `basic` by default.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"method","configPhase":"RUN_TIME","acceptedValues":["tooltip:basic[`client_secret_basic` (default): The client id and secret are submitted with the HTTP Authorization Basic scheme.]","tooltip:post[`client_secret_post`: The client id and secret are submitted as the `client_id` and `client_secret` form parameters.]","tooltip:post-jwt[`client_secret_jwt`: The client id and generated JWT secret are submitted as the `client_id` and `client_secret` form parameters.]","tooltip:query[client id and secret are submitted as HTTP query parameters. This option is only supported by the OIDC extension.]"],"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CREDENTIALS_CLIENT_SECRET_METHOD","enum":true}},{"configDocKey":{"type":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Credentials.Jwt.Source","key":"quarkus.oidc-client.\"id\".credentials.jwt.source","additionalKeys":[],"configDoc":"JWT token source: OIDC provider client or an existing JWT bearer token.","withinAMap":true,"defaultValue":"client","javaDocSiteLink":"","docMapKey":"source","configPhase":"RUN_TIME","acceptedValues":["`client`","`bearer`"],"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CREDENTIALS_JWT_SOURCE","enum":true}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".credentials.jwt.secret","additionalKeys":[],"configDoc":"If provided, indicates that JWT is signed using a secret key.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"secret","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CREDENTIALS_JWT_SECRET","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".credentials.jwt.secret-provider.name","additionalKeys":[],"configDoc":"The CredentialsProvider bean name, which should only be set if more than one CredentialsProvider is registered","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"name","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CREDENTIALS_JWT_SECRET_PROVIDER_NAME","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".credentials.jwt.secret-provider.keyring-name","additionalKeys":[],"configDoc":"The CredentialsProvider keyring name. The keyring name is only required when the CredentialsProvider being used requires the keyring name to look up the secret, which is often the case when a CredentialsProvider is shared by multiple extensions to retrieve credentials from a more dynamic source like a vault instance or secret manager","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"keyring-name","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CREDENTIALS_JWT_SECRET_PROVIDER_KEYRING_NAME","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".credentials.jwt.secret-provider.key","additionalKeys":[],"configDoc":"The CredentialsProvider client secret key","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CREDENTIALS_JWT_SECRET_PROVIDER_KEY","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".credentials.jwt.key","additionalKeys":[],"configDoc":"String representation of a private key. If provided, indicates that JWT is signed using a private key in PEM or JWK format. You can use the `signature-algorithm` property to override the default key algorithm, `RS256`.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CREDENTIALS_JWT_KEY","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".credentials.jwt.key-file","additionalKeys":[],"configDoc":"If provided, indicates that JWT is signed using a private key in PEM or JWK format. You can use the `signature-algorithm` property to override the default key algorithm, `RS256`.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-file","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CREDENTIALS_JWT_KEY_FILE","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".credentials.jwt.key-store-file","additionalKeys":[],"configDoc":"If provided, indicates that JWT is signed using a private key from a keystore.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-file","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CREDENTIALS_JWT_KEY_STORE_FILE","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".credentials.jwt.key-store-password","additionalKeys":[],"configDoc":"A parameter to specify the password of the keystore file.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-password","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CREDENTIALS_JWT_KEY_STORE_PASSWORD","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".credentials.jwt.key-id","additionalKeys":[],"configDoc":"The private key id or alias.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-id","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CREDENTIALS_JWT_KEY_ID","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".credentials.jwt.key-password","additionalKeys":[],"configDoc":"The private key password.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-password","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CREDENTIALS_JWT_KEY_PASSWORD","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".credentials.jwt.audience","additionalKeys":[],"configDoc":"The JWT audience (`aud`) claim value. By default, the audience is set to the address of the OpenId Connect Provider's token endpoint.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"audience","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CREDENTIALS_JWT_AUDIENCE","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".credentials.jwt.token-key-id","additionalKeys":[],"configDoc":"The key identifier of the signing key added as a JWT `kid` header.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"token-key-id","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CREDENTIALS_JWT_TOKEN_KEY_ID","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".credentials.jwt.issuer","additionalKeys":[],"configDoc":"The issuer of the signing key added as a JWT `iss` claim. The default value is the client id.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"issuer","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CREDENTIALS_JWT_ISSUER","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".credentials.jwt.subject","additionalKeys":[],"configDoc":"Subject of the signing key added as a JWT `sub` claim The default value is the client id.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"subject","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CREDENTIALS_JWT_SUBJECT","enum":false}},{"configDocKey":{"type":"java.lang.String","key":"quarkus.oidc-client.\"id\".credentials.jwt.claims.\"claim-name\"","additionalKeys":[],"configDoc":"Additional claims.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html","docMapKey":"claim-name","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CREDENTIALS_JWT_CLAIMS__CLAIM_NAME_","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".credentials.jwt.signature-algorithm","additionalKeys":[],"configDoc":"The signature algorithm used for the `key-file` property. Supported values: `RS256` (default), `RS384`, `RS512`, `PS256`, `PS384`, `PS512`, `ES256`, `ES384`, `ES512`, `HS256`, `HS384`, `HS512`.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"signature-algorithm","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CREDENTIALS_JWT_SIGNATURE_ALGORITHM","enum":false}},{"configDocKey":{"type":"int","key":"quarkus.oidc-client.\"id\".credentials.jwt.lifespan","additionalKeys":[],"configDoc":"The JWT lifespan in seconds. This value is added to the time at which the JWT was issued to calculate the expiration time.","withinAMap":true,"defaultValue":"10","javaDocSiteLink":"","docMapKey":"lifespan","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CREDENTIALS_JWT_LIFESPAN","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.oidc-client.\"id\".credentials.jwt.assertion","additionalKeys":[],"configDoc":"If true then the client authentication token is a JWT bearer grant assertion. Instead of producing 'client_assertion' and 'client_assertion_type' form properties, only 'assertion' is produced. This option is only supported by the OIDC client extension.","withinAMap":true,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"assertion","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CREDENTIALS_JWT_ASSERTION","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".proxy.host","additionalKeys":[],"configDoc":"The host name or IP address of the Proxy. +\nNote: If the OIDC adapter requires a Proxy to talk with the OIDC server (Provider), set this value to enable the usage of a Proxy.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"host","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__PROXY_HOST","enum":false}},{"configDocKey":{"type":"int","key":"quarkus.oidc-client.\"id\".proxy.port","additionalKeys":[],"configDoc":"The port number of the Proxy. The default value is `80`.","withinAMap":true,"defaultValue":"80","javaDocSiteLink":"","docMapKey":"port","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__PROXY_PORT","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".proxy.username","additionalKeys":[],"configDoc":"The username, if the Proxy needs authentication.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"username","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__PROXY_USERNAME","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".proxy.password","additionalKeys":[],"configDoc":"The password, if the Proxy needs authentication.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"password","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__PROXY_PASSWORD","enum":false}},{"configDocKey":{"type":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Tls.Verification","key":"quarkus.oidc-client.\"id\".tls.verification","additionalKeys":[],"configDoc":"Certificate validation and hostname verification, which can be one of the following `Verification` values. Default is `required`.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"verification","configPhase":"RUN_TIME","acceptedValues":["tooltip:required[Certificates are validated and hostname verification is enabled. This is the default value.]","tooltip:certificate-validation[Certificates are validated but hostname verification is disabled.]","tooltip:none[All certificates are trusted and hostname verification is disabled.]"],"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__TLS_VERIFICATION","enum":true}},{"configDocKey":{"type":"path","key":"quarkus.oidc-client.\"id\".tls.key-store-file","additionalKeys":[],"configDoc":"An optional keystore that holds the certificate information instead of specifying separate files.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-file","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__TLS_KEY_STORE_FILE","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".tls.key-store-file-type","additionalKeys":[],"configDoc":"The type of the keystore file. If not given, the type is automatically detected based on the file name.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-file-type","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__TLS_KEY_STORE_FILE_TYPE","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".tls.key-store-provider","additionalKeys":[],"configDoc":"The provider of the keystore file. If not given, the provider is automatically detected based on the keystore file type.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-provider","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__TLS_KEY_STORE_PROVIDER","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".tls.key-store-password","additionalKeys":[],"configDoc":"The password of the keystore file. If not given, the default value, `password`, is used.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-password","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__TLS_KEY_STORE_PASSWORD","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".tls.key-store-key-alias","additionalKeys":[],"configDoc":"The alias of a specific key in the keystore. When SNI is disabled, if the keystore contains multiple keys and no alias is specified, the behavior is undefined.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-key-alias","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__TLS_KEY_STORE_KEY_ALIAS","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".tls.key-store-key-password","additionalKeys":[],"configDoc":"The password of the key, if it is different from the `key-store-password`.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-key-password","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__TLS_KEY_STORE_KEY_PASSWORD","enum":false}},{"configDocKey":{"type":"path","key":"quarkus.oidc-client.\"id\".tls.trust-store-file","additionalKeys":[],"configDoc":"The truststore that holds the certificate information of the certificates to trust.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-file","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__TLS_TRUST_STORE_FILE","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".tls.trust-store-password","additionalKeys":[],"configDoc":"The password of the truststore file.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-password","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__TLS_TRUST_STORE_PASSWORD","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".tls.trust-store-cert-alias","additionalKeys":[],"configDoc":"The alias of the truststore certificate.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-cert-alias","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__TLS_TRUST_STORE_CERT_ALIAS","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".tls.trust-store-file-type","additionalKeys":[],"configDoc":"The type of the truststore file. If not given, the type is automatically detected based on the file name.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-file-type","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__TLS_TRUST_STORE_FILE_TYPE","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".tls.trust-store-provider","additionalKeys":[],"configDoc":"The provider of the truststore file. If not given, the provider is automatically detected based on the truststore file type.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-provider","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__TLS_TRUST_STORE_PROVIDER","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".id","additionalKeys":[],"configDoc":"A unique OIDC client identifier. It must be set when OIDC clients are created dynamically and is optional in all other cases.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"id","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__ID","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.oidc-client.\"id\".client-enabled","additionalKeys":[],"configDoc":"If this client configuration is enabled.","withinAMap":true,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"client-enabled","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__CLIENT_ENABLED","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".scopes","additionalKeys":[],"configDoc":"List of access token scopes","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"scopes","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__SCOPES","enum":false}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.oidc-client.\"id\".refresh-token-time-skew","additionalKeys":[],"configDoc":"Refresh token time skew in seconds. If this property is enabled then the configured number of seconds is added to the current time when checking whether the access token should be refreshed. If the sum is greater than this access token's expiration time then a refresh is going to happen.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"refresh-token-time-skew","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__REFRESH_TOKEN_TIME_SKEW","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.oidc-client.\"id\".absolute-expires-in","additionalKeys":[],"configDoc":"If the access token 'expires_in' property should be checked as an absolute time value as opposed to a duration relative to the current time.","withinAMap":true,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"absolute-expires-in","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__ABSOLUTE_EXPIRES_IN","enum":false}},{"configDocKey":{"type":"io.quarkus.oidc.client.OidcClientConfig.Grant.Type","key":"quarkus.oidc-client.\"id\".grant.type","additionalKeys":[],"configDoc":"Grant type","withinAMap":true,"defaultValue":"client","javaDocSiteLink":"","docMapKey":"type","configPhase":"RUN_TIME","acceptedValues":["tooltip:client['client_credentials' grant requiring an OIDC client authentication only]","tooltip:password['password' grant requiring both OIDC client and user ('username' and 'password') authentications]","tooltip:code['authorization_code' grant requiring an OIDC client authentication as well as at least 'code' and 'redirect_uri' parameters which must be passed to OidcClient at the token request time.]","tooltip:exchange['urn:ietf:params:oauth:grant-type:token-exchange' grant requiring an OIDC client authentication as well as at least 'subject_token' parameter which must be passed to OidcClient at the token request time.]","tooltip:jwt['urn:ietf:params:oauth:grant-type:jwt-bearer' grant requiring an OIDC client authentication as well as at least an 'assertion' parameter which must be passed to OidcClient at the token request time.]","tooltip:refresh['refresh_token' grant requiring an OIDC client authentication and a refresh token. Note, OidcClient supports this grant by default if an access token acquisition response contained a refresh token. However, in some cases, the refresh token is provided out of band, for example, it can be shared between several of the confidential client's services, etc. If 'quarkus.oidc-client.grant-type' is set to 'refresh' then `OidcClient` will only support refreshing the tokens.]","tooltip:ciba['urn:openid:params:grant-type:ciba' grant requiring an OIDC client authentication as well as 'auth_req_id' parameter which must be passed to OidcClient at the token request time.]","tooltip:device['urn:ietf:params:oauth:grant-type:device_code' grant requiring an OIDC client authentication as well as 'device_code' parameter which must be passed to OidcClient at the token request time.]"],"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__GRANT_TYPE","enum":true}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".grant.access-token-property","additionalKeys":[],"configDoc":"Access token property name in a token grant response","withinAMap":true,"defaultValue":"access_token","javaDocSiteLink":"","docMapKey":"access-token-property","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__GRANT_ACCESS_TOKEN_PROPERTY","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".grant.refresh-token-property","additionalKeys":[],"configDoc":"Refresh token property name in a token grant response","withinAMap":true,"defaultValue":"refresh_token","javaDocSiteLink":"","docMapKey":"refresh-token-property","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__GRANT_REFRESH_TOKEN_PROPERTY","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".grant.expires-in-property","additionalKeys":[],"configDoc":"Access token expiry property name in a token grant response","withinAMap":true,"defaultValue":"expires_in","javaDocSiteLink":"","docMapKey":"expires-in-property","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__GRANT_EXPIRES_IN_PROPERTY","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-client.\"id\".grant.refresh-expires-in-property","additionalKeys":[],"configDoc":"Refresh token expiry property name in a token grant response","withinAMap":true,"defaultValue":"refresh_expires_in","javaDocSiteLink":"","docMapKey":"refresh-expires-in-property","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__GRANT_REFRESH_EXPIRES_IN_PROPERTY","enum":false}},{"configDocKey":{"type":"java.util.Map","key":"quarkus.oidc-client.\"id\".grant-options.\"grant-name\"","additionalKeys":[],"configDoc":"Grant options","withinAMap":true,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html","docMapKey":"grant-name","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__GRANT_OPTIONS__GRANT_NAME_","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.oidc-client.\"id\".early-tokens-acquisition","additionalKeys":[],"configDoc":"Requires that all filters which use 'OidcClient' acquire the tokens at the post-construct initialization time, possibly long before these tokens are used. This property should be disabled if the access token may expire before it is used for the first time and no refresh token is available.","withinAMap":true,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"early-tokens-acquisition","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__EARLY_TOKENS_ACQUISITION","enum":false}},{"configDocKey":{"type":"java.lang.String","key":"quarkus.oidc-client.\"id\".headers.\"headers\"","additionalKeys":[],"configDoc":"Custom HTTP headers which have to be sent to the token endpoint","withinAMap":true,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html","docMapKey":"headers","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.oidc-client","since":null,"environmentVariable":"QUARKUS_OIDC_CLIENT__ID__HEADERS__HEADERS_","enum":false}}],"anchorPrefix":null}}]