[{"configDocKey":{"type":"boolean","key":"quarkus.kafka.health.enabled","additionalKeys":[],"configDoc":"Whether a health check is published in case the smallrye-health extension is present.\n\nIf you enable the health check, you must specify the `kafka.bootstrap.servers` property.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"health-enabled","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.kafka","since":null,"environmentVariable":"QUARKUS_KAFKA_HEALTH_ENABLED","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.kafka.snappy.enabled","additionalKeys":[],"configDoc":"Whether to enable Snappy in native mode.\n\nNote that Snappy requires GraalVM 21{plus} and embeds a native library in the native executable. This library is unpacked and loaded when the application starts.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"snappy-enabled","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.kafka","since":null,"environmentVariable":"QUARKUS_KAFKA_SNAPPY_ENABLED","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.kafka.snappy.load-from-shared-classloader","additionalKeys":[],"configDoc":"Whether to load the Snappy native library from the shared classloader. This setting is only used in tests if the tests are using different profiles, which would lead to unsatisfied link errors when loading Snappy.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"snappy-load-from-shared-class-loader","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.kafka","since":null,"environmentVariable":"QUARKUS_KAFKA_SNAPPY_LOAD_FROM_SHARED_CLASSLOADER","enum":false}},{"configDocKey":{"type":"java.lang.Boolean","key":"quarkus.kafka.devservices.enabled","additionalKeys":[],"configDoc":"If Dev Services for Kafka has been explicitly enabled or disabled. Dev Services are generally enabled by default, unless there is an existing configuration present. For Kafka, Dev Services starts a broker unless `kafka.bootstrap.servers` is set or if all the Reactive Messaging Kafka channel are configured with a `bootstrap.servers`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"enabled","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.kafka","since":null,"environmentVariable":"QUARKUS_KAFKA_DEVSERVICES_ENABLED","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.kafka.devservices.port","additionalKeys":[],"configDoc":"Optional fixed port the dev service will listen to.\n\nIf not defined, the port will be chosen randomly.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"port","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.kafka","since":null,"environmentVariable":"QUARKUS_KAFKA_DEVSERVICES_PORT","enum":false}},{"configDocKey":{"type":"io.quarkus.kafka.client.deployment.KafkaDevServicesBuildTimeConfig.Provider","key":"quarkus.kafka.devservices.provider","additionalKeys":[],"configDoc":"Kafka dev service container type.\n\nRedpanda, Strimzi and kafka-native container providers are supported. Default is redpanda.\n\nFor Redpanda: See https://docs.redpanda.com/current/get-started/quick-start/ and https://hub.docker.com/r/vectorized/redpanda\n\nFor Strimzi: See https://github.com/strimzi/test-container and https://quay.io/repository/strimzi-test-container/test-container\n\nFor Kafka Native: See https://github.com/ozangunalp/kafka-native and https://quay.io/repository/ogunalp/kafka-native\n\nNote that Strimzi and Kafka Native images are launched in Kraft mode.","withinAMap":false,"defaultValue":"redpanda","javaDocSiteLink":"","docMapKey":"provider","configPhase":"BUILD_TIME","acceptedValues":["`redpanda`","`strimzi`","`kafka-native`"],"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.kafka","since":null,"environmentVariable":"QUARKUS_KAFKA_DEVSERVICES_PROVIDER","enum":true}},{"configDocKey":{"type":"string","key":"quarkus.kafka.devservices.image-name","additionalKeys":[],"configDoc":"The Kafka container image to use.\n\nDependent on the provider.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"image-name","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.kafka","since":null,"environmentVariable":"QUARKUS_KAFKA_DEVSERVICES_IMAGE_NAME","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.kafka.devservices.shared","additionalKeys":[],"configDoc":"Indicates if the Kafka broker managed by Quarkus Dev Services is shared. When shared, Quarkus looks for running containers using label-based service discovery. If a matching container is found, it is used, and so a second one is not started. Otherwise, Dev Services for Kafka starts a new container.\n\nThe discovery uses the `quarkus-dev-service-kafka` label. The value is configured using the `service-name` property.\n\nContainer sharing is only used in dev mode.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"shared","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.kafka","since":null,"environmentVariable":"QUARKUS_KAFKA_DEVSERVICES_SHARED","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.kafka.devservices.service-name","additionalKeys":[],"configDoc":"The value of the `quarkus-dev-service-kafka` label attached to the started container. This property is used when `shared` is set to `true`. In this case, before starting a container, Dev Services for Kafka looks for a container with the `quarkus-dev-service-kafka` label set to the configured value. If found, it will use this container instead of starting a new one. Otherwise, it starts a new container with the `quarkus-dev-service-kafka` label set to the specified value.\n\nThis property is used when you need multiple shared Kafka brokers.","withinAMap":false,"defaultValue":"kafka","javaDocSiteLink":"","docMapKey":"service-name","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.kafka","since":null,"environmentVariable":"QUARKUS_KAFKA_DEVSERVICES_SERVICE_NAME","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.kafka.devservices.topic-partitions.\"topic-name\"","additionalKeys":[],"configDoc":"The topic-partition pairs to create in the Dev Services Kafka broker. After the broker is started, given topics with partitions are created, skipping already existing topics. For example, `quarkus.kafka.devservices.topic-partitions.test=2` will create a topic named `test` with 2 partitions.\n\nThe topic creation will not try to re-partition existing topics with different number of partitions.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"topic-name","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.kafka","since":null,"environmentVariable":"QUARKUS_KAFKA_DEVSERVICES_TOPIC_PARTITIONS__TOPIC_NAME_","enum":false}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.kafka.devservices.topic-partitions-timeout","additionalKeys":[],"configDoc":"Timeout for admin client calls used in topic creation.\n\nDefaults to 2 seconds.","withinAMap":false,"defaultValue":"2S","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"topic-partitions-timeout","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.kafka","since":null,"environmentVariable":"QUARKUS_KAFKA_DEVSERVICES_TOPIC_PARTITIONS_TIMEOUT","enum":false}},{"configDocKey":{"type":"java.lang.String","key":"quarkus.kafka.devservices.container-env.\"environment-variable-name\"","additionalKeys":[],"configDoc":"Environment variables that are passed to the container.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html","docMapKey":"environment-variable-name","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.kafka","since":null,"environmentVariable":"QUARKUS_KAFKA_DEVSERVICES_CONTAINER_ENV__ENVIRONMENT_VARIABLE_NAME_","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.kafka.devservices.redpanda.transaction-enabled","additionalKeys":[],"configDoc":"Enables transaction support. Also enables the producer idempotence. Find more info about Redpanda transaction support on link:https://vectorized.io/blog/fast-transactions/[https://vectorized.io/blog/fast-transactions/]. Notice that link:https://cwiki.apache.org/confluence/display/KAFKA/KIP-447%3A+Producer+scalability+for+exactly+once+semantics[KIP-447 (producer scalability for exactly once semantic)] and link:https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=89068820[KIP-360 (Improve reliability of idempotent/transactional producer)] are _not_ supported.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"transaction-enabled","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.kafka","since":null,"environmentVariable":"QUARKUS_KAFKA_DEVSERVICES_REDPANDA_TRANSACTION_ENABLED","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.kafka.devservices.redpanda.proxy-port","additionalKeys":[],"configDoc":"Port to access the Redpanda HTTP Proxy (link:https://docs.redpanda.com/current/develop/http-proxy/[pandaproxy]).\n\nIf not defined, the port will be chosen randomly.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"proxy-port","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.kafka","since":null,"environmentVariable":"QUARKUS_KAFKA_DEVSERVICES_REDPANDA_PROXY_PORT","enum":false}}]