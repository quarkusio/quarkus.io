[{"configDocKey":{"type":"string","key":"quarkus.otel.traces.exporter","additionalKeys":[],"configDoc":"List of exporters supported by Quarkus.\n\nList of exporters to be used for tracing, separated by commas. Has one of the values on `ExporterType` `otlp`, `cdi`, `none` or the full qualified name of a class implementing `io.opentelemetry.sdk.trace.export.SpanExporter`\n\nDefault on Quarkus is `ExporterType.Constants++#++CDI_VALUE`.","withinAMap":false,"defaultValue":"cdi","javaDocSiteLink":"","docMapKey":"exporter","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.otel","since":null,"environmentVariable":"QUARKUS_OTEL_TRACES_EXPORTER","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.otel.traces.sampler","additionalKeys":[],"configDoc":"The sampler to use for tracing.\n\nHas one of the values on `SamplerType` `always_on`, `always_off`, `traceidratio`, `parentbased_always_on`, `parentbased_always_off`, `parentbased_traceidratio` or the Sampler SPI name. This will use the OTel SPI hooks for the `io.opentelemetry.sdk.trace.samplers.Sampler` implementation set in the provider: `io.opentelemetry.sdk.autoconfigure.spi.traces.ConfigurableSamplerProvider`.\n\nFallbacks to the legacy property `quarkus.opentelemetry.tracer.sampler.sampler.name` or defaults to `SamplerType.Constants++#++PARENT_BASED_ALWAYS_ON`.","withinAMap":false,"defaultValue":"parentbased_always_on","javaDocSiteLink":"","docMapKey":"sampler","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.otel","since":null,"environmentVariable":"QUARKUS_OTEL_TRACES_SAMPLER","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.otel.metrics.exporter","additionalKeys":[],"configDoc":"No Metrics exporter for now","withinAMap":false,"defaultValue":"none","javaDocSiteLink":"","docMapKey":"metrics-exporter","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":true,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.otel","since":null,"environmentVariable":"QUARKUS_OTEL_METRICS_EXPORTER","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.otel.logs.exporter","additionalKeys":[],"configDoc":"No Log exporter for now.","withinAMap":false,"defaultValue":"none","javaDocSiteLink":"","docMapKey":"logs-exporter","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":true,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.otel","since":null,"environmentVariable":"QUARKUS_OTEL_LOGS_EXPORTER","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.otel.propagators","additionalKeys":[],"configDoc":"The propagators to be used. Use a comma-separated list for multiple propagators.\n\nHas values from `PropagatorType` or the full qualified name of a class implementing `io.opentelemetry.context.propagation.TextMapPropagator`.\n\nDefault is `PropagatorType.Constants++#++TRACE_CONTEXT`,`PropagatorType.Constants++#++BAGGAGE` (W3C).","withinAMap":false,"defaultValue":"tracecontext,baggage","javaDocSiteLink":"","docMapKey":"propagators","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":true,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.otel","since":null,"environmentVariable":"QUARKUS_OTEL_PROPAGATORS","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.otel.instrument.grpc","additionalKeys":[],"configDoc":"Enables instrumentation for gRPC.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"grpc","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.otel","since":null,"environmentVariable":"QUARKUS_OTEL_INSTRUMENT_GRPC","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.otel.instrument.messaging","additionalKeys":[],"configDoc":"Enables instrumentation for Messaging.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"messaging","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.otel","since":null,"environmentVariable":"QUARKUS_OTEL_INSTRUMENT_MESSAGING","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.otel.instrument.resteasy-client","additionalKeys":[],"configDoc":"Enables instrumentation for REST Client backed by RESTEasy Classic.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"resteasy-client","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.otel","since":null,"environmentVariable":"QUARKUS_OTEL_INSTRUMENT_RESTEASY_CLIENT","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.otel.instrument.rest","additionalKeys":[],"configDoc":"Enables instrumentation for Quarkus REST.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"rest","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.otel","since":null,"environmentVariable":"QUARKUS_OTEL_INSTRUMENT_REST","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.otel.instrument.resteasy","additionalKeys":[],"configDoc":"Enables instrumentation for RESTEasy Classic.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"resteasy","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.otel","since":null,"environmentVariable":"QUARKUS_OTEL_INSTRUMENT_RESTEASY","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.otel.security-events.enabled","additionalKeys":[],"configDoc":"Whether exporting of the security events is enabled.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"enabled","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.otel","since":null,"environmentVariable":"QUARKUS_OTEL_SECURITY_EVENTS_ENABLED","enum":false}},{"configDocKey":{"type":"io.quarkus.opentelemetry.runtime.config.build.OTelBuildConfig.SecurityEvents.SecurityEventType","key":"quarkus.otel.security-events.event-types","additionalKeys":[],"configDoc":"Selects security event types.","withinAMap":false,"defaultValue":"all","javaDocSiteLink":"","docMapKey":"event-types","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":["`all`","`authentication-success`","`authentication-failure`","`authorization-success`","`authorization-failure`","`other`"],"optional":false,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.otel","since":null,"environmentVariable":"QUARKUS_OTEL_SECURITY_EVENTS_EVENT_TYPES","enum":true}}]