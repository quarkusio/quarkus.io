[{"configDocKey":{"type":"string","key":".auth-server-url","additionalKeys":[],"configDoc":"The base URL of the OpenID Connect (OIDC) server, for example, `https://host:port/auth`. Do not set this property if the public key verification (`public-key`) or certificate chain verification only (`certificate-chain`) is required. The OIDC discovery endpoint is called by default by appending a `.well-known/openid-configuration` path to this URL. For Keycloak, use `https://host:port/realms/++{++realm++}++`, replacing `++{++realm++}++` with the Keycloak realm name.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"auth-server-url","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_AUTH_SERVER_URL","enum":false}},{"configDocKey":{"type":"java.lang.Boolean","key":".discovery-enabled","additionalKeys":[],"configDoc":"Discovery of the OIDC endpoints. If not enabled, you must configure the OIDC endpoint URLs individually.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"discovery-enabled","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_DISCOVERY_ENABLED","enum":false}},{"configDocKey":{"type":"string","key":".token-path","additionalKeys":[],"configDoc":"The OIDC token endpoint that issues access and refresh tokens; specified as a relative path or absolute URL. Set if `discovery-enabled` is `false` or a discovered token endpoint path must be customized.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"token-path","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_TOKEN_PATH","enum":false}},{"configDocKey":{"type":"string","key":".revoke-path","additionalKeys":[],"configDoc":"The relative path or absolute URL of the OIDC token revocation endpoint.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"revoke-path","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_REVOKE_PATH","enum":false}},{"configDocKey":{"type":"string","key":".client-id","additionalKeys":[],"configDoc":"The client id of the application. Each application has a client id that is used to identify the application. Setting the client id is not required if `application-type` is `service` and no token introspection is required.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"client-id","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CLIENT_ID","enum":false}},{"configDocKey":{"type":"java.time.Duration","key":".connection-delay","additionalKeys":[],"configDoc":"The duration to attempt the initial connection to an OIDC server. For example, setting the duration to `20S` allows 10 retries, each 2 seconds apart. This property is only effective when the initial OIDC connection is created. For dropped connections, use the `connection-retry-count` property instead.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"connection-delay","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CONNECTION_DELAY","enum":false}},{"configDocKey":{"type":"int","key":".connection-retry-count","additionalKeys":[],"configDoc":"The number of times to retry re-establishing an existing OIDC connection if it is temporarily lost. Different from `connection-delay`, which applies only to initial connection attempts. For instance, if a request to the OIDC token endpoint fails due to a connection issue, it will be retried as per this setting.","withinAMap":false,"defaultValue":"3","javaDocSiteLink":"","docMapKey":"connection-retry-count","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CONNECTION_RETRY_COUNT","enum":false}},{"configDocKey":{"type":"java.time.Duration","key":".connection-timeout","additionalKeys":[],"configDoc":"The number of seconds after which the current OIDC connection request times out.","withinAMap":false,"defaultValue":"10S","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"connection-timeout","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CONNECTION_TIMEOUT","enum":false}},{"configDocKey":{"type":"boolean","key":".use-blocking-dns-lookup","additionalKeys":[],"configDoc":"Whether DNS lookup should be performed on the worker thread. Use this option when you can see logged warnings about blocked Vert.x event loop by HTTP requests to OIDC server.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"use-blocking-dns-lookup","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_USE_BLOCKING_DNS_LOOKUP","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":".max-pool-size","additionalKeys":[],"configDoc":"The maximum size of the connection pool used by the WebClient.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"max-pool-size","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_MAX_POOL_SIZE","enum":false}},{"configDocSection":{"name":"","optional":false,"withinAMap":false,"sectionDetails":null,"sectionDetailsTitle":".credentials","configPhase":"BUILD_TIME","topLevelGrouping":"","configGroupType":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Credentials","showSection":false,"configDocItems":[{"configDocKey":{"type":"string","key":".credentials.secret","additionalKeys":[],"configDoc":"The client secret used by the `client_secret_basic` authentication method. Must be set unless a secret is set in `client-secret` or `jwt` client authentication is required. You can use `client-secret.value` instead, but both properties are mutually exclusive.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"secret","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CREDENTIALS_SECRET","enum":false}},{"configDocKey":{"type":"string","key":".credentials.client-secret.value","additionalKeys":[],"configDoc":"The client secret value. This value is ignored if `credentials.secret` is set. Must be set unless a secret is set in `client-secret` or `jwt` client authentication is required.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"value","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CREDENTIALS_CLIENT_SECRET_VALUE","enum":false}},{"configDocKey":{"type":"string","key":".credentials.client-secret.provider.name","additionalKeys":[],"configDoc":"The CredentialsProvider name, which should only be set if more than one CredentialsProvider is registered","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"name","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CREDENTIALS_CLIENT_SECRET_PROVIDER_NAME","enum":false}},{"configDocKey":{"type":"string","key":".credentials.client-secret.provider.key","additionalKeys":[],"configDoc":"The CredentialsProvider client secret key","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CREDENTIALS_CLIENT_SECRET_PROVIDER_KEY","enum":false}},{"configDocKey":{"type":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Credentials.Secret.Method","key":".credentials.client-secret.method","additionalKeys":[],"configDoc":"The authentication method. If the `clientSecret.value` secret is set, this method is `basic` by default.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"method","configPhase":"BUILD_TIME","acceptedValues":["tooltip:basic[`client_secret_basic` (default): The client id and secret are submitted with the HTTP Authorization Basic scheme.]","tooltip:post[`client_secret_post`: The client id and secret are submitted as the `client_id` and `client_secret` form parameters.]","tooltip:post-jwt[`client_secret_jwt`: The client id and generated JWT secret are submitted as the `client_id` and `client_secret` form parameters.]","tooltip:query[client id and secret are submitted as HTTP query parameters. This option is only supported by the OIDC extension.]"],"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CREDENTIALS_CLIENT_SECRET_METHOD","enum":true}},{"configDocKey":{"type":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Credentials.Jwt.Source","key":".credentials.jwt.source","additionalKeys":[],"configDoc":"JWT token source: OIDC provider client or an existing JWT bearer token.","withinAMap":false,"defaultValue":"client","javaDocSiteLink":"","docMapKey":"source","configPhase":"BUILD_TIME","acceptedValues":["`client`","`bearer`"],"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CREDENTIALS_JWT_SOURCE","enum":true}},{"configDocKey":{"type":"string","key":".credentials.jwt.secret","additionalKeys":[],"configDoc":"If provided, indicates that JWT is signed using a secret key.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"secret","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CREDENTIALS_JWT_SECRET","enum":false}},{"configDocKey":{"type":"string","key":".credentials.jwt.secret-provider.name","additionalKeys":[],"configDoc":"The CredentialsProvider name, which should only be set if more than one CredentialsProvider is registered","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"name","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CREDENTIALS_JWT_SECRET_PROVIDER_NAME","enum":false}},{"configDocKey":{"type":"string","key":".credentials.jwt.secret-provider.key","additionalKeys":[],"configDoc":"The CredentialsProvider client secret key","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CREDENTIALS_JWT_SECRET_PROVIDER_KEY","enum":false}},{"configDocKey":{"type":"string","key":".credentials.jwt.key-file","additionalKeys":[],"configDoc":"If provided, indicates that JWT is signed using a private key in PEM or JWK format. You can use the `signature-algorithm` property to override the default key algorithm, `RS256`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-file","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CREDENTIALS_JWT_KEY_FILE","enum":false}},{"configDocKey":{"type":"string","key":".credentials.jwt.key-store-file","additionalKeys":[],"configDoc":"If provided, indicates that JWT is signed using a private key from a keystore.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-file","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CREDENTIALS_JWT_KEY_STORE_FILE","enum":false}},{"configDocKey":{"type":"string","key":".credentials.jwt.key-store-password","additionalKeys":[],"configDoc":"A parameter to specify the password of the keystore file.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-password","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CREDENTIALS_JWT_KEY_STORE_PASSWORD","enum":false}},{"configDocKey":{"type":"string","key":".credentials.jwt.key-id","additionalKeys":[],"configDoc":"The private key id or alias.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-id","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CREDENTIALS_JWT_KEY_ID","enum":false}},{"configDocKey":{"type":"string","key":".credentials.jwt.key-password","additionalKeys":[],"configDoc":"The private key password.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-password","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CREDENTIALS_JWT_KEY_PASSWORD","enum":false}},{"configDocKey":{"type":"string","key":".credentials.jwt.audience","additionalKeys":[],"configDoc":"The JWT audience (`aud`) claim value. By default, the audience is set to the address of the OpenId Connect Provider's token endpoint.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"audience","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CREDENTIALS_JWT_AUDIENCE","enum":false}},{"configDocKey":{"type":"string","key":".credentials.jwt.token-key-id","additionalKeys":[],"configDoc":"The key identifier of the signing key added as a JWT `kid` header.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"token-key-id","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CREDENTIALS_JWT_TOKEN_KEY_ID","enum":false}},{"configDocKey":{"type":"string","key":".credentials.jwt.issuer","additionalKeys":[],"configDoc":"The issuer of the signing key added as a JWT `iss` claim. The default value is the client id.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"issuer","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CREDENTIALS_JWT_ISSUER","enum":false}},{"configDocKey":{"type":"string","key":".credentials.jwt.subject","additionalKeys":[],"configDoc":"Subject of the signing key added as a JWT `sub` claim The default value is the client id.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"subject","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CREDENTIALS_JWT_SUBJECT","enum":false}},{"configDocKey":{"type":"`Map<String,String>`","key":".credentials.jwt.claims","additionalKeys":[],"configDoc":"Additional claims.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"claims","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":true,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CREDENTIALS_JWT_CLAIMS","enum":false}},{"configDocKey":{"type":"string","key":".credentials.jwt.signature-algorithm","additionalKeys":[],"configDoc":"The signature algorithm used for the `key-file` property. Supported values: `RS256` (default), `RS384`, `RS512`, `PS256`, `PS384`, `PS512`, `ES256`, `ES384`, `ES512`, `HS256`, `HS384`, `HS512`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"signature-algorithm","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CREDENTIALS_JWT_SIGNATURE_ALGORITHM","enum":false}},{"configDocKey":{"type":"int","key":".credentials.jwt.lifespan","additionalKeys":[],"configDoc":"The JWT lifespan in seconds. This value is added to the time at which the JWT was issued to calculate the expiration time.","withinAMap":false,"defaultValue":"10","javaDocSiteLink":"","docMapKey":"lifespan","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_CREDENTIALS_JWT_LIFESPAN","enum":false}}],"anchorPrefix":null}},{"configDocSection":{"name":"","optional":false,"withinAMap":false,"sectionDetails":null,"sectionDetailsTitle":".proxy","configPhase":"BUILD_TIME","topLevelGrouping":"","configGroupType":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Proxy","showSection":false,"configDocItems":[{"configDocKey":{"type":"string","key":".proxy.host","additionalKeys":[],"configDoc":"The host name or IP address of the Proxy. +\nNote: If the OIDC adapter requires a Proxy to talk with the OIDC server (Provider), set this value to enable the usage of a Proxy.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"host","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_PROXY_HOST","enum":false}},{"configDocKey":{"type":"int","key":".proxy.port","additionalKeys":[],"configDoc":"The port number of the Proxy. The default value is `80`.","withinAMap":false,"defaultValue":"80","javaDocSiteLink":"","docMapKey":"port","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_PROXY_PORT","enum":false}},{"configDocKey":{"type":"string","key":".proxy.username","additionalKeys":[],"configDoc":"The username, if the Proxy needs authentication.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"username","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_PROXY_USERNAME","enum":false}},{"configDocKey":{"type":"string","key":".proxy.password","additionalKeys":[],"configDoc":"The password, if the Proxy needs authentication.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"password","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_PROXY_PASSWORD","enum":false}}],"anchorPrefix":null}},{"configDocSection":{"name":"","optional":false,"withinAMap":false,"sectionDetails":null,"sectionDetailsTitle":".tls","configPhase":"BUILD_TIME","topLevelGrouping":"","configGroupType":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Tls","showSection":false,"configDocItems":[{"configDocKey":{"type":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Tls.Verification","key":".tls.verification","additionalKeys":[],"configDoc":"Certificate validation and hostname verification, which can be one of the following `Verification` values. Default is `required`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"verification","configPhase":"BUILD_TIME","acceptedValues":["tooltip:required[Certificates are validated and hostname verification is enabled. This is the default value.]","tooltip:certificate-validation[Certificates are validated but hostname verification is disabled.]","tooltip:none[All certificates are trusted and hostname verification is disabled.]"],"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_TLS_VERIFICATION","enum":true}},{"configDocKey":{"type":"path","key":".tls.key-store-file","additionalKeys":[],"configDoc":"An optional keystore that holds the certificate information instead of specifying separate files.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-file","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_TLS_KEY_STORE_FILE","enum":false}},{"configDocKey":{"type":"string","key":".tls.key-store-file-type","additionalKeys":[],"configDoc":"The type of the keystore file. If not given, the type is automatically detected based on the file name.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-file-type","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_TLS_KEY_STORE_FILE_TYPE","enum":false}},{"configDocKey":{"type":"string","key":".tls.key-store-provider","additionalKeys":[],"configDoc":"The provider of the keystore file. If not given, the provider is automatically detected based on the keystore file type.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-provider","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_TLS_KEY_STORE_PROVIDER","enum":false}},{"configDocKey":{"type":"string","key":".tls.key-store-password","additionalKeys":[],"configDoc":"The password of the keystore file. If not given, the default value, `password`, is used.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-password","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_TLS_KEY_STORE_PASSWORD","enum":false}},{"configDocKey":{"type":"string","key":".tls.key-store-key-alias","additionalKeys":[],"configDoc":"The alias of a specific key in the keystore. When SNI is disabled, if the keystore contains multiple keys and no alias is specified, the behavior is undefined.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-key-alias","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_TLS_KEY_STORE_KEY_ALIAS","enum":false}},{"configDocKey":{"type":"string","key":".tls.key-store-key-password","additionalKeys":[],"configDoc":"The password of the key, if it is different from the `key-store-password`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-key-password","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_TLS_KEY_STORE_KEY_PASSWORD","enum":false}},{"configDocKey":{"type":"path","key":".tls.trust-store-file","additionalKeys":[],"configDoc":"The truststore that holds the certificate information of the certificates to trust.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-file","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_TLS_TRUST_STORE_FILE","enum":false}},{"configDocKey":{"type":"string","key":".tls.trust-store-password","additionalKeys":[],"configDoc":"The password of the truststore file.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-password","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_TLS_TRUST_STORE_PASSWORD","enum":false}},{"configDocKey":{"type":"string","key":".tls.trust-store-cert-alias","additionalKeys":[],"configDoc":"The alias of the truststore certificate.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-cert-alias","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_TLS_TRUST_STORE_CERT_ALIAS","enum":false}},{"configDocKey":{"type":"string","key":".tls.trust-store-file-type","additionalKeys":[],"configDoc":"The type of the truststore file. If not given, the type is automatically detected based on the file name.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-file-type","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_TLS_TRUST_STORE_FILE_TYPE","enum":false}},{"configDocKey":{"type":"string","key":".tls.trust-store-provider","additionalKeys":[],"configDoc":"The provider of the truststore file. If not given, the provider is automatically detected based on the truststore file type.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-provider","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_TLS_TRUST_STORE_PROVIDER","enum":false}}],"anchorPrefix":null}}]