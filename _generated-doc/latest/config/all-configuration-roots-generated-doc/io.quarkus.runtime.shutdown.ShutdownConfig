[{"configDocKey":{"type":"java.time.Duration","key":"quarkus.shutdown.timeout","additionalKeys":[],"configDoc":"The timeout to wait for running requests to finish. If this is not set then the application will exit immediately. Setting this timeout will incur a small performance penalty, as it requires active requests to be tracked.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"timeout","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.shutdown","since":null,"environmentVariable":"QUARKUS_SHUTDOWN_TIMEOUT","enum":false}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.shutdown.delay","additionalKeys":[],"configDoc":"Delay between shutdown being requested and actually initiated. Also called the pre-shutdown phase. In pre-shutdown, the server continues working as usual, except a readiness probe starts reporting \"down\" (if the `smallrye-health` extension is present). This gives the infrastructure time to detect that the application instance is shutting down and stop routing traffic to it. Notice that this property will only take effect if `quarkus.shutdown.delay-enabled` is explicitly set to `true`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"delay","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.shutdown","since":null,"environmentVariable":"QUARKUS_SHUTDOWN_DELAY","enum":false}}]