[{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.uri","additionalKeys":[],"configDoc":"Sets the URI of the running Infinispan server to connect to. hotrod://localhost:11222@admin:password If provided `hosts`, `username` and `password` will be ignored.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"uri","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.hosts","additionalKeys":[],"configDoc":"Sets the host name/port to connect to. Each one is separated by a semicolon (eg. host1:11222;host2:11222).","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"hosts","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.client-intelligence","additionalKeys":[],"configDoc":"Sets client intelligence used by authentication Available values: ++*++ `BASIC` - Means that the client doesn't handle server topology changes and therefore will only use the list of servers supplied at configuration time. ++*++ `TOPOLOGY_AWARE` - Use this provider if you don't want the client to present any certificates to the remote TLS host. ++*++ `HASH_DISTRIBUTION_AWARE` - Like `TOPOLOGY_AWARE` but with the additional advantage that each request involving keys will be routed to the server who is the primary owner which improves performance greatly. This is the default.","withinAMap":false,"defaultValue":"HASH_DISTRIBUTION_AWARE","javaDocSiteLink":"","docMapKey":"client-intelligence","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"java.lang.Boolean","key":"quarkus.infinispan-client.use-auth","additionalKeys":[],"configDoc":"Enables or disables authentication. Set it to false when connecting to an Infinispan Server without authentication. deployments. Default is 'true'.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"use-auth","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.username","additionalKeys":[],"configDoc":"Sets username used by authentication.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"username","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.password","additionalKeys":[],"configDoc":"Sets password used by authentication.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"password","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.auth-realm","additionalKeys":[],"configDoc":"Sets realm used by authentication","withinAMap":false,"defaultValue":"default","javaDocSiteLink":"","docMapKey":"auth-realm","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.auth-server-name","additionalKeys":[],"configDoc":"Sets server name used by authentication","withinAMap":false,"defaultValue":"infinispan","javaDocSiteLink":"","docMapKey":"auth-server-name","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.sasl-mechanism","additionalKeys":[],"configDoc":"Sets SASL mechanism used by authentication. Available values: ++*++ `DIGEST-MD5` - Uses the MD5 hashing algorithm in addition to nonces to encrypt credentials. This is the default. ++*++ `EXTERNAL` - Uses client certificates to provide valid identities to Infinispan Server and enable encryption. ++*++ `PLAIN` - Sends credentials in plain text (unencrypted) over the wire in a way that is similar to HTTP BASIC authentication. You should use `PLAIN` authentication only in combination with TLS encryption.","withinAMap":false,"defaultValue":"DIGEST-MD5","javaDocSiteLink":"","docMapKey":"sasl-mechanism","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.trust-store","additionalKeys":[],"configDoc":"Specifies the filename of a truststore to use to create the `SSLContext`. You also need to specify a trustStorePassword. Setting this property implicitly enables SSL/TLS.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.trust-store-password","additionalKeys":[],"configDoc":"Specifies the password needed to open the truststore You also need to specify a trustStore. Setting this property implicitly enables SSL/TLS.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-password","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.trust-store-type","additionalKeys":[],"configDoc":"Specifies the type of the truststore, such as JKS or JCEKS. Defaults to JKS if trustStore is enabled.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-type","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.ssl-protocol","additionalKeys":[],"configDoc":"Configures the secure socket protocol. Setting this property implicitly enables SSL/TLS.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"ssl-protocol","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.ssl-provider","additionalKeys":[],"configDoc":"Sets the ssl provider. For example BCFIPS Setting this implicitly enables SSL/TLS.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"ssl-provider","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.ssl-ciphers","additionalKeys":[],"configDoc":"Configures the ciphers. Setting this property implicitly enables SSL/TLS.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"ssl-ciphers","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"java.lang.Boolean","key":"quarkus.infinispan-client.ssl-host-name-validation","additionalKeys":[],"configDoc":"Do SSL hostname validation. Defaults to true.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"ssl-host-name-validation","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.sni-host-name","additionalKeys":[],"configDoc":"SNI host name. Mandatory when SSL is enabled and host name validation is true.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"sni-host-name","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"java.lang.Boolean","key":"quarkus.infinispan-client.tracing.propagation.enabled","additionalKeys":[],"configDoc":"Whether a tracing propagation is enabled in case the Opentelemetry extension is present. By default the propagation of the context is propagated from the client to the Infinispan Server.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"tracing-propagation-enabled","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.cache.\"cache\".configuration","additionalKeys":[],"configDoc":"Cache configuration in inlined XML to create the cache on first access. Will be ignored if the configuration-uri is provided for the same cache name. An example of the user defined property: quarkus.infinispan-client.cache.bookscache.configuration=","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"configuration","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.cache.\"cache\".configuration-uri","additionalKeys":[],"configDoc":"Cache configuration file in XML, Json or YAML whose path will be converted to URI to create the cache on first access. An example of the user defined property. cacheConfig.xml file is located in the 'resources' folder: quarkus.infinispan-client.cache.bookscache.configuration-uri=cacheConfig.xml","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"configuration-uri","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.infinispan-client.cache.\"cache\".near-cache-max-entries","additionalKeys":[],"configDoc":"The maximum number of entries to keep locally for the specified cache.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"near-cache-max-entries","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"org.infinispan.client.hotrod.configuration.NearCacheMode","key":"quarkus.infinispan-client.cache.\"cache\".near-cache-mode","additionalKeys":[],"configDoc":"Sets near cache mode used by the Infinispan Client Available values: ++*++ `DISABLED` - Means that near caching is disabled. This is the default value. ++*++ `INVALIDATED` - Means is near caching is invalidated, so when entries are updated or removed server-side, invalidation messages will be sent to clients to remove them from the near cache.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"near-cache-mode","configPhase":"RUN_TIME","acceptedValues":["`disabled`","`invalidated`"],"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":true}},{"configDocKey":{"type":"java.lang.Boolean","key":"quarkus.infinispan-client.cache.\"cache\".near-cache-use-bloom-filter","additionalKeys":[],"configDoc":"Enables bloom filter for near caching. Bloom filters optimize performance for write operations by reducing the total number of invalidation messages.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"near-cache-use-bloom-filter","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.backup-cluster.\"backup-cluster\".hosts","additionalKeys":[],"configDoc":"Sets the host name/port to connect to. Each one is separated by a semicolon (eg. hostA:11222;hostB:11222).","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"hosts","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.backup-cluster.\"backup-cluster\".client-intelligence","additionalKeys":[],"configDoc":"Sets client intelligence used by authentication Available values: ++*++ `BASIC` - Means that the client doesn't handle server topology changes and therefore will only use the list of servers supplied at configuration time. ++*++ `TOPOLOGY_AWARE` - Use this provider if you don't want the client to present any certificates to the remote TLS host. ++*++ `HASH_DISTRIBUTION_AWARE` - Like `TOPOLOGY_AWARE` but with the additional advantage that each request involving keys will be routed to the server who is the primary owner which improves performance greatly. This is the default.","withinAMap":true,"defaultValue":"HASH_DISTRIBUTION_AWARE","javaDocSiteLink":"","docMapKey":"client-intelligence","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.\"named-infinispan-clients\".uri","additionalKeys":[],"configDoc":"Sets the URI of the running Infinispan server to connect to. hotrod://localhost:11222@admin:password If provided `hosts`, `username` and `password` will be ignored.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"uri","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.\"named-infinispan-clients\".hosts","additionalKeys":[],"configDoc":"Sets the host name/port to connect to. Each one is separated by a semicolon (eg. host1:11222;host2:11222).","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"hosts","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.\"named-infinispan-clients\".client-intelligence","additionalKeys":[],"configDoc":"Sets client intelligence used by authentication Available values: ++*++ `BASIC` - Means that the client doesn't handle server topology changes and therefore will only use the list of servers supplied at configuration time. ++*++ `TOPOLOGY_AWARE` - Use this provider if you don't want the client to present any certificates to the remote TLS host. ++*++ `HASH_DISTRIBUTION_AWARE` - Like `TOPOLOGY_AWARE` but with the additional advantage that each request involving keys will be routed to the server who is the primary owner which improves performance greatly. This is the default.","withinAMap":true,"defaultValue":"HASH_DISTRIBUTION_AWARE","javaDocSiteLink":"","docMapKey":"client-intelligence","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"java.lang.Boolean","key":"quarkus.infinispan-client.\"named-infinispan-clients\".use-auth","additionalKeys":[],"configDoc":"Enables or disables authentication. Set it to false when connecting to an Infinispan Server without authentication. deployments. Default is 'true'.","withinAMap":true,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"use-auth","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.\"named-infinispan-clients\".username","additionalKeys":[],"configDoc":"Sets username used by authentication.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"username","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.\"named-infinispan-clients\".password","additionalKeys":[],"configDoc":"Sets password used by authentication.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"password","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.\"named-infinispan-clients\".auth-realm","additionalKeys":[],"configDoc":"Sets realm used by authentication","withinAMap":true,"defaultValue":"default","javaDocSiteLink":"","docMapKey":"auth-realm","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.\"named-infinispan-clients\".auth-server-name","additionalKeys":[],"configDoc":"Sets server name used by authentication","withinAMap":true,"defaultValue":"infinispan","javaDocSiteLink":"","docMapKey":"auth-server-name","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.\"named-infinispan-clients\".sasl-mechanism","additionalKeys":[],"configDoc":"Sets SASL mechanism used by authentication. Available values: ++*++ `DIGEST-MD5` - Uses the MD5 hashing algorithm in addition to nonces to encrypt credentials. This is the default. ++*++ `EXTERNAL` - Uses client certificates to provide valid identities to Infinispan Server and enable encryption. ++*++ `PLAIN` - Sends credentials in plain text (unencrypted) over the wire in a way that is similar to HTTP BASIC authentication. You should use `PLAIN` authentication only in combination with TLS encryption.","withinAMap":true,"defaultValue":"DIGEST-MD5","javaDocSiteLink":"","docMapKey":"sasl-mechanism","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.\"named-infinispan-clients\".trust-store","additionalKeys":[],"configDoc":"Specifies the filename of a truststore to use to create the `SSLContext`. You also need to specify a trustStorePassword. Setting this property implicitly enables SSL/TLS.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.\"named-infinispan-clients\".trust-store-password","additionalKeys":[],"configDoc":"Specifies the password needed to open the truststore You also need to specify a trustStore. Setting this property implicitly enables SSL/TLS.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-password","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.\"named-infinispan-clients\".trust-store-type","additionalKeys":[],"configDoc":"Specifies the type of the truststore, such as JKS or JCEKS. Defaults to JKS if trustStore is enabled.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-type","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.\"named-infinispan-clients\".ssl-protocol","additionalKeys":[],"configDoc":"Configures the secure socket protocol. Setting this property implicitly enables SSL/TLS.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"ssl-protocol","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.\"named-infinispan-clients\".ssl-provider","additionalKeys":[],"configDoc":"Sets the ssl provider. For example BCFIPS Setting this implicitly enables SSL/TLS.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"ssl-provider","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.\"named-infinispan-clients\".ssl-ciphers","additionalKeys":[],"configDoc":"Configures the ciphers. Setting this property implicitly enables SSL/TLS.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"ssl-ciphers","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"java.lang.Boolean","key":"quarkus.infinispan-client.\"named-infinispan-clients\".ssl-host-name-validation","additionalKeys":[],"configDoc":"Do SSL hostname validation. Defaults to true.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"ssl-host-name-validation","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.\"named-infinispan-clients\".sni-host-name","additionalKeys":[],"configDoc":"SNI host name. Mandatory when SSL is enabled and host name validation is true.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"sni-host-name","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"java.lang.Boolean","key":"quarkus.infinispan-client.\"named-infinispan-clients\".tracing.propagation.enabled","additionalKeys":[],"configDoc":"Whether a tracing propagation is enabled in case the Opentelemetry extension is present. By default the propagation of the context is propagated from the client to the Infinispan Server.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"tracing-propagation-enabled","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.\"named-infinispan-clients\".cache.\"cache\".configuration","additionalKeys":[],"configDoc":"Cache configuration in inlined XML to create the cache on first access. Will be ignored if the configuration-uri is provided for the same cache name. An example of the user defined property: quarkus.infinispan-client.cache.bookscache.configuration=","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"configuration","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.\"named-infinispan-clients\".cache.\"cache\".configuration-uri","additionalKeys":[],"configDoc":"Cache configuration file in XML, Json or YAML whose path will be converted to URI to create the cache on first access. An example of the user defined property. cacheConfig.xml file is located in the 'resources' folder: quarkus.infinispan-client.cache.bookscache.configuration-uri=cacheConfig.xml","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"configuration-uri","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.infinispan-client.\"named-infinispan-clients\".cache.\"cache\".near-cache-max-entries","additionalKeys":[],"configDoc":"The maximum number of entries to keep locally for the specified cache.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"near-cache-max-entries","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"org.infinispan.client.hotrod.configuration.NearCacheMode","key":"quarkus.infinispan-client.\"named-infinispan-clients\".cache.\"cache\".near-cache-mode","additionalKeys":[],"configDoc":"Sets near cache mode used by the Infinispan Client Available values: ++*++ `DISABLED` - Means that near caching is disabled. This is the default value. ++*++ `INVALIDATED` - Means is near caching is invalidated, so when entries are updated or removed server-side, invalidation messages will be sent to clients to remove them from the near cache.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"near-cache-mode","configPhase":"RUN_TIME","acceptedValues":["`disabled`","`invalidated`"],"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":true}},{"configDocKey":{"type":"java.lang.Boolean","key":"quarkus.infinispan-client.\"named-infinispan-clients\".cache.\"cache\".near-cache-use-bloom-filter","additionalKeys":[],"configDoc":"Enables bloom filter for near caching. Bloom filters optimize performance for write operations by reducing the total number of invalidation messages.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"near-cache-use-bloom-filter","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.\"named-infinispan-clients\".backup-cluster.\"backup-cluster\".hosts","additionalKeys":[],"configDoc":"Sets the host name/port to connect to. Each one is separated by a semicolon (eg. hostA:11222;hostB:11222).","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"hosts","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.infinispan-client.\"named-infinispan-clients\".backup-cluster.\"backup-cluster\".client-intelligence","additionalKeys":[],"configDoc":"Sets client intelligence used by authentication Available values: ++*++ `BASIC` - Means that the client doesn't handle server topology changes and therefore will only use the list of servers supplied at configuration time. ++*++ `TOPOLOGY_AWARE` - Use this provider if you don't want the client to present any certificates to the remote TLS host. ++*++ `HASH_DISTRIBUTION_AWARE` - Like `TOPOLOGY_AWARE` but with the additional advantage that each request involving keys will be routed to the server who is the primary owner which improves performance greatly. This is the default.","withinAMap":true,"defaultValue":"HASH_DISTRIBUTION_AWARE","javaDocSiteLink":"","docMapKey":"client-intelligence","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.infinispan-client","enum":false}},{"configDocKey":{"type":"java.lang.Boolean","key":"quarkus.infinispan-client.use-schema-registration","additionalKeys":[],"configDoc":"Enables or disables Protobuf generated schemas upload to the server. Set it to 'false' when you need to handle the lifecycle of the Protobuf Schemas on Server side yourself. Default is 'true'. This is a global setting and is not specific to a Infinispan Client.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"use-schema-registration","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.infinispan-client","enum":false}}]